package edsdk.bindings;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagEdsDeviceInfo extends Structure {
	/** C type : EdsChar[256] */
	public byte[] szPortName = new byte[256];
	/** C type : EdsChar[256] */
	public byte[] szDeviceDescription = new byte[256];
	/** C type : EdsUInt32 */
	public NativeLong deviceSubType;
	/** C type : EdsUInt32 */
	public NativeLong reserved;
	public tagEdsDeviceInfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("szPortName", "szDeviceDescription", "deviceSubType", "reserved");
	}
	/**
	 * @param szPortName C type : EdsChar[256]<br>
	 * @param szDeviceDescription C type : EdsChar[256]<br>
	 * @param deviceSubType C type : EdsUInt32<br>
	 * @param reserved C type : EdsUInt32
	 */
	public tagEdsDeviceInfo(byte szPortName[], byte szDeviceDescription[], NativeLong deviceSubType, NativeLong reserved) {
		super();
		if ((szPortName.length != this.szPortName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPortName = szPortName;
		if ((szDeviceDescription.length != this.szDeviceDescription.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceDescription = szDeviceDescription;
		this.deviceSubType = deviceSubType;
		this.reserved = reserved;
	}
	public tagEdsDeviceInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagEdsDeviceInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends tagEdsDeviceInfo implements Structure.ByValue {
		
	};
}
