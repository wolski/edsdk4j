package edsdk.bindings;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import com.sun.jna.win32.StdCallLibrary.StdCallCallback;
import com.sun.jna.win32.StdCallLibrary;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>EdSdk</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface EdSdkLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "EdSdk";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(EdSdkLibrary.JNA_LIBRARY_NAME);
	public static final EdSdkLibrary INSTANCE = (EdSdkLibrary)Native.loadLibrary(EdSdkLibrary.JNA_LIBRARY_NAME, EdSdkLibrary.class);
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsDataType {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:136</i> */
		public static final int kEdsDataType_Unknown = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:137</i> */
		public static final int kEdsDataType_Bool = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:138</i> */
		public static final int kEdsDataType_String = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:139</i> */
		public static final int kEdsDataType_Int8 = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:140</i> */
		public static final int kEdsDataType_UInt8 = 6;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:141</i> */
		public static final int kEdsDataType_Int16 = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:142</i> */
		public static final int kEdsDataType_UInt16 = 7;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:143</i> */
		public static final int kEdsDataType_Int32 = 8;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:144</i> */
		public static final int kEdsDataType_UInt32 = 9;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:145</i> */
		public static final int kEdsDataType_Int64 = 10;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:146</i> */
		public static final int kEdsDataType_UInt64 = 11;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:147</i> */
		public static final int kEdsDataType_Float = 12;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:148</i> */
		public static final int kEdsDataType_Double = 13;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:149</i> */
		public static final int kEdsDataType_ByteBlock = 14;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:150</i> */
		public static final int kEdsDataType_Rational = 20;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:151</i> */
		public static final int kEdsDataType_Point = 21;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:152</i> */
		public static final int kEdsDataType_Rect = 22;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:153</i> */
		public static final int kEdsDataType_Time = 23;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:155</i> */
		public static final int kEdsDataType_Bool_Array = 30;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:156</i> */
		public static final int kEdsDataType_Int8_Array = 31;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:157</i> */
		public static final int kEdsDataType_Int16_Array = 32;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:158</i> */
		public static final int kEdsDataType_Int32_Array = 33;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:159</i> */
		public static final int kEdsDataType_UInt8_Array = 34;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:160</i> */
		public static final int kEdsDataType_UInt16_Array = 35;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:161</i> */
		public static final int kEdsDataType_UInt32_Array = 36;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:162</i> */
		public static final int kEdsDataType_Rational_Array = 37;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:164</i> */
		public static final int kEdsDataType_FocusInfo = 101;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:165</i> */
		public static final int kEdsDataType_PictureStyleDesc = 102;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfAf {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:333</i> */
		public static final int kEdsCameraCommand_EvfAf_OFF = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:334</i> */
		public static final int kEdsCameraCommand_EvfAf_ON = 1;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsShutterButton {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:339</i> */
		public static final int kEdsCameraCommand_ShutterButton_OFF = 0x00000000;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:340</i> */
		public static final int kEdsCameraCommand_ShutterButton_Halfway = 0x00000001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:341</i> */
		public static final int kEdsCameraCommand_ShutterButton_Completely = 0x00000003;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:342</i> */
		public static final int kEdsCameraCommand_ShutterButton_Halfway_NonAF = 0x00010001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:343</i> */
		public static final int kEdsCameraCommand_ShutterButton_Completely_NonAF = 0x00010003;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfDriveLens {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:542</i> */
		public static final int kEdsEvfDriveLens_Near1 = 0x00000001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:543</i> */
		public static final int kEdsEvfDriveLens_Near2 = 0x00000002;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:544</i> */
		public static final int kEdsEvfDriveLens_Near3 = 0x00000003;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:545</i> */
		public static final int kEdsEvfDriveLens_Far1 = 0x00008001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:546</i> */
		public static final int kEdsEvfDriveLens_Far2 = 0x00008002;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:547</i> */
		public static final int kEdsEvfDriveLens_Far3 = 0x00008003;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfDepthOfFieldPreview {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:556</i> */
		public static final int kEdsEvfDepthOfFieldPreview_OFF = 0x00000000;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:557</i> */
		public static final int kEdsEvfDepthOfFieldPreview_ON = 0x00000001;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsSeekOrigin {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:566</i> */
		public static final int kEdsSeek_Cur = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:567</i> */
		public static final int kEdsSeek_Begin = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:568</i> */
		public static final int kEdsSeek_End = 2;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsAccess {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:577</i> */
		public static final int kEdsAccess_Read = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:578</i> */
		public static final int kEdsAccess_Write = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:579</i> */
		public static final int kEdsAccess_ReadWrite = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:580</i> */
		public static final long kEdsAccess_Error = 0xFFFFFFFFL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsFileCreateDisposition {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:589</i> */
		public static final int kEdsFileCreateDisposition_CreateNew = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:590</i> */
		public static final int kEdsFileCreateDisposition_CreateAlways = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:591</i> */
		public static final int kEdsFileCreateDisposition_OpenExisting = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:592</i> */
		public static final int kEdsFileCreateDisposition_OpenAlways = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:593</i> */
		public static final int kEdsFileCreateDisposition_TruncateExsisting = 4;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsImageType {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:604</i> */
		public static final int kEdsImageType_Unknown = 0x00000000;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:605</i> */
		public static final int kEdsImageType_Jpeg = 0x00000001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:606</i> */
		public static final int kEdsImageType_CRW = 0x00000002;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:607</i> */
		public static final int kEdsImageType_RAW = 0x00000004;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:608</i> */
		public static final int kEdsImageType_CR2 = 0x00000006;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsImageSize {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:617</i> */
		public static final int kEdsImageSize_Large = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:618</i> */
		public static final int kEdsImageSize_Middle = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:619</i> */
		public static final int kEdsImageSize_Small = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:620</i> */
		public static final int kEdsImageSize_Middle1 = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:621</i> */
		public static final int kEdsImageSize_Middle2 = 6;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:622</i> */
		public static final int kEdsImageSize_Small1 = 14;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:623</i> */
		public static final int kEdsImageSize_Small2 = 15;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:624</i> */
		public static final int kEdsImageSize_Small3 = 16;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:625</i> */
		public static final long kEdsImageSize_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsCompressQuality {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:634</i> */
		public static final int kEdsCompressQuality_Normal = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:635</i> */
		public static final int kEdsCompressQuality_Fine = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:636</i> */
		public static final int kEdsCompressQuality_Lossless = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:637</i> */
		public static final int kEdsCompressQuality_SuperFine = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:638</i> */
		public static final long kEdsCompressQuality_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsImageQuality {
		/**
		 * Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:649</i>
		 */
		public static final int EdsImageQuality_LJ = 0x0010ff0f;
		/**
		 * Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:650</i>
		 */
		public static final int EdsImageQuality_M1J = 0x0510ff0f;
		/**
		 * Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:651</i>
		 */
		public static final int EdsImageQuality_M2J = 0x0610ff0f;
		/**
		 * Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:652</i>
		 */
		public static final int EdsImageQuality_SJ = 0x0210ff0f;
		/**
		 * Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:653</i>
		 */
		public static final int EdsImageQuality_LJF = 0x0013ff0f;
		/**
		 * Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:654</i>
		 */
		public static final int EdsImageQuality_LJN = 0x0012ff0f;
		/**
		 * Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:655</i>
		 */
		public static final int EdsImageQuality_MJF = 0x0113ff0f;
		/**
		 * Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:656</i>
		 */
		public static final int EdsImageQuality_MJN = 0x0112ff0f;
		/**
		 * Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:657</i>
		 */
		public static final int EdsImageQuality_SJF = 0x0213ff0f;
		/**
		 * Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:658</i>
		 */
		public static final int EdsImageQuality_SJN = 0x0212ff0f;
		/**
		 * Jpeg Small1 Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:659</i>
		 */
		public static final int EdsImageQuality_S1JF = 0x0E13ff0f;
		/**
		 * Jpeg Small1 Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:660</i>
		 */
		public static final int EdsImageQuality_S1JN = 0x0E12ff0f;
		/**
		 * Jpeg Small2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:661</i>
		 */
		public static final int EdsImageQuality_S2JF = 0x0F13ff0f;
		/**
		 * Jpeg Small3<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:662</i>
		 */
		public static final int EdsImageQuality_S3JF = 0x1013ff0f;
		/**
		 * RAW<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:665</i>
		 */
		public static final int EdsImageQuality_LR = 0x0064ff0f;
		/**
		 * RAW + Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:666</i>
		 */
		public static final int EdsImageQuality_LRLJF = 0x00640013;
		/**
		 * RAW + Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:667</i>
		 */
		public static final int EdsImageQuality_LRLJN = 0x00640012;
		/**
		 * RAW + Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:668</i>
		 */
		public static final int EdsImageQuality_LRMJF = 0x00640113;
		/**
		 * RAW + Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:669</i>
		 */
		public static final int EdsImageQuality_LRMJN = 0x00640112;
		/**
		 * RAW + Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:670</i>
		 */
		public static final int EdsImageQuality_LRSJF = 0x00640213;
		/**
		 * RAW + Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:671</i>
		 */
		public static final int EdsImageQuality_LRSJN = 0x00640212;
		/**
		 * RAW + Jpeg Small1 Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:672</i>
		 */
		public static final int EdsImageQuality_LRS1JF = 0x00640E13;
		/**
		 * RAW + Jpeg Small1 Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:673</i>
		 */
		public static final int EdsImageQuality_LRS1JN = 0x00640E12;
		/**
		 * RAW + Jpeg Small2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:674</i>
		 */
		public static final int EdsImageQuality_LRS2JF = 0x00640F13;
		/**
		 * RAW + Jpeg Small3<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:675</i>
		 */
		public static final int EdsImageQuality_LRS3JF = 0x00641013;
		/**
		 * RAW + Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:677</i>
		 */
		public static final int EdsImageQuality_LRLJ = 0x00640010;
		/**
		 * RAW + Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:678</i>
		 */
		public static final int EdsImageQuality_LRM1J = 0x00640510;
		/**
		 * RAW + Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:679</i>
		 */
		public static final int EdsImageQuality_LRM2J = 0x00640610;
		/**
		 * RAW + Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:680</i>
		 */
		public static final int EdsImageQuality_LRSJ = 0x00640210;
		/**
		 * MRAW(SRAW1)<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:683</i>
		 */
		public static final int EdsImageQuality_MR = 0x0164ff0f;
		/**
		 * MRAW(SRAW1) + Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:684</i>
		 */
		public static final int EdsImageQuality_MRLJF = 0x01640013;
		/**
		 * MRAW(SRAW1) + Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:685</i>
		 */
		public static final int EdsImageQuality_MRLJN = 0x01640012;
		/**
		 * MRAW(SRAW1) + Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:686</i>
		 */
		public static final int EdsImageQuality_MRMJF = 0x01640113;
		/**
		 * MRAW(SRAW1) + Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:687</i>
		 */
		public static final int EdsImageQuality_MRMJN = 0x01640112;
		/**
		 * MRAW(SRAW1) + Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:688</i>
		 */
		public static final int EdsImageQuality_MRSJF = 0x01640213;
		/**
		 * MRAW(SRAW1) + Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:689</i>
		 */
		public static final int EdsImageQuality_MRSJN = 0x01640212;
		/**
		 * MRAW(SRAW1) + Jpeg Small1 Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:690</i>
		 */
		public static final int EdsImageQuality_MRS1JF = 0x01640E13;
		/**
		 * MRAW(SRAW1) + Jpeg Small1 Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:691</i>
		 */
		public static final int EdsImageQuality_MRS1JN = 0x01640E12;
		/**
		 * MRAW(SRAW1) + Jpeg Small2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:692</i>
		 */
		public static final int EdsImageQuality_MRS2JF = 0x01640F13;
		/**
		 * MRAW(SRAW1) + Jpeg Small3<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:693</i>
		 */
		public static final int EdsImageQuality_MRS3JF = 0x01641013;
		/**
		 * MRAW(SRAW1) + Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:695</i>
		 */
		public static final int EdsImageQuality_MRLJ = 0x01640010;
		/**
		 * MRAW(SRAW1) + Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:696</i>
		 */
		public static final int EdsImageQuality_MRM1J = 0x01640510;
		/**
		 * MRAW(SRAW1) + Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:697</i>
		 */
		public static final int EdsImageQuality_MRM2J = 0x01640610;
		/**
		 * MRAW(SRAW1) + Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:698</i>
		 */
		public static final int EdsImageQuality_MRSJ = 0x01640210;
		/**
		 * SRAW(SRAW2)<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:701</i>
		 */
		public static final int EdsImageQuality_SR = 0x0264ff0f;
		/**
		 * SRAW(SRAW2) + Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:702</i>
		 */
		public static final int EdsImageQuality_SRLJF = 0x02640013;
		/**
		 * SRAW(SRAW2) + Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:703</i>
		 */
		public static final int EdsImageQuality_SRLJN = 0x02640012;
		/**
		 * SRAW(SRAW2) + Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:704</i>
		 */
		public static final int EdsImageQuality_SRMJF = 0x02640113;
		/**
		 * SRAW(SRAW2) + Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:705</i>
		 */
		public static final int EdsImageQuality_SRMJN = 0x02640112;
		/**
		 * SRAW(SRAW2) + Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:706</i>
		 */
		public static final int EdsImageQuality_SRSJF = 0x02640213;
		/**
		 * SRAW(SRAW2) + Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:707</i>
		 */
		public static final int EdsImageQuality_SRSJN = 0x02640212;
		/**
		 * SRAW(SRAW2) + Jpeg Small1 Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:708</i>
		 */
		public static final int EdsImageQuality_SRS1JF = 0x02640E13;
		/**
		 * SRAW(SRAW2) + Jpeg Small1 Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:709</i>
		 */
		public static final int EdsImageQuality_SRS1JN = 0x02640E12;
		/**
		 * SRAW(SRAW2) + Jpeg Small2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:710</i>
		 */
		public static final int EdsImageQuality_SRS2JF = 0x02640F13;
		/**
		 * SRAW(SRAW2) + Jpeg Small3<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:711</i>
		 */
		public static final int EdsImageQuality_SRS3JF = 0x02641013;
		/**
		 * SRAW(SRAW2) + Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:713</i>
		 */
		public static final int EdsImageQuality_SRLJ = 0x02640010;
		/**
		 * SRAW(SRAW2) + Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:714</i>
		 */
		public static final int EdsImageQuality_SRM1J = 0x02640510;
		/**
		 * SRAW(SRAW2) + Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:715</i>
		 */
		public static final int EdsImageQuality_SRM2J = 0x02640610;
		/**
		 * SRAW(SRAW2) + Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:716</i>
		 */
		public static final int EdsImageQuality_SRSJ = 0x02640210;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:718</i> */
		public static final long EdsImageQuality_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsImageQualityForLegacy {
		/**
		 * Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:723</i>
		 */
		public static final int kEdsImageQualityForLegacy_LJ = 0x001f000f;
		/**
		 * Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:724</i>
		 */
		public static final int kEdsImageQualityForLegacy_M1J = 0x051f000f;
		/**
		 * Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:725</i>
		 */
		public static final int kEdsImageQualityForLegacy_M2J = 0x061f000f;
		/**
		 * Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:726</i>
		 */
		public static final int kEdsImageQualityForLegacy_SJ = 0x021f000f;
		/**
		 * Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:727</i>
		 */
		public static final int kEdsImageQualityForLegacy_LJF = 0x00130000;
		/**
		 * Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:728</i>
		 */
		public static final int kEdsImageQualityForLegacy_LJN = 0x00120000;
		/**
		 * Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:729</i>
		 */
		public static final int kEdsImageQualityForLegacy_MJF = 0x01130000;
		/**
		 * Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:730</i>
		 */
		public static final int kEdsImageQualityForLegacy_MJN = 0x01120000;
		/**
		 * Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:731</i>
		 */
		public static final int kEdsImageQualityForLegacy_SJF = 0x02130000;
		/**
		 * Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:732</i>
		 */
		public static final int kEdsImageQualityForLegacy_SJN = 0x02120000;
		/**
		 * RAW<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:734</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR = 0x00240000;
		/**
		 * RAW + Jpeg Large Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:735</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRLJF = 0x00240013;
		/**
		 * RAW + Jpeg Large Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:736</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRLJN = 0x00240012;
		/**
		 * RAW + Jpeg Middle Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:737</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRMJF = 0x00240113;
		/**
		 * RAW + Jpeg Middle Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:738</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRMJN = 0x00240112;
		/**
		 * RAW + Jpeg Small Fine<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:739</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRSJF = 0x00240213;
		/**
		 * RAW + Jpeg Small Normal<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:740</i>
		 */
		public static final int kEdsImageQualityForLegacy_LRSJN = 0x00240212;
		/**
		 * RAW<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:742</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR2 = 0x002f000f;
		/**
		 * RAW + Jpeg Large<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:743</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR2LJ = 0x002f001f;
		/**
		 * RAW + Jpeg Middle1<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:744</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR2M1J = 0x002f051f;
		/**
		 * RAW + Jpeg Middle2<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:745</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR2M2J = 0x002f061f;
		/**
		 * RAW + Jpeg Small<br>
		 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:746</i>
		 */
		public static final int kEdsImageQualityForLegacy_LR2SJ = 0x002f021f;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:748</i> */
		public static final long kEdsImageQualityForLegacy_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsImageSource {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:757</i> */
		public static final int kEdsImageSrc_FullView = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:758</i> */
		public static final int kEdsImageSrc_Thumbnail = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:759</i> */
		public static final int kEdsImageSrc_Preview = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:760</i> */
		public static final int kEdsImageSrc_RAWThumbnail = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:761</i> */
		public static final int kEdsImageSrc_RAWFullView = 4;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsTargetImageType {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:771</i> */
		public static final int kEdsTargetImageType_Unknown = 0x00000000;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:772</i> */
		public static final int kEdsTargetImageType_Jpeg = 0x00000001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:773</i> */
		public static final int kEdsTargetImageType_TIFF = 0x00000007;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:774</i> */
		public static final int kEdsTargetImageType_TIFF16 = 0x00000008;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:775</i> */
		public static final int kEdsTargetImageType_RGB = 0x00000009;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:776</i> */
		public static final int kEdsTargetImageType_RGB16 = 0x0000000A;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:777</i> */
		public static final int kEdsTargetImageType_DIB = 0x0000000B;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsProgressOption {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:786</i> */
		public static final int kEdsProgressOption_NoReport = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:787</i> */
		public static final int kEdsProgressOption_Done = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:788</i> */
		public static final int kEdsProgressOption_Periodically = 2;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsFileAttributes {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:798</i> */
		public static final int kEdsFileAttribute_Normal = 0x00000000;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:799</i> */
		public static final int kEdsFileAttribute_ReadOnly = 0x00000001;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:800</i> */
		public static final int kEdsFileAttribute_Hidden = 0x00000002;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:801</i> */
		public static final int kEdsFileAttribute_System = 0x00000004;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:802</i> */
		public static final int kEdsFileAttribute_Archive = 0x00000020;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsBatteryLevel2 {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:812</i> */
		public static final int kEdsBatteryLevel2_Empty = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:813</i> */
		public static final int kEdsBatteryLevel2_Low = 9;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:814</i> */
		public static final int kEdsBatteryLevel2_Half = 49;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:815</i> */
		public static final int kEdsBatteryLevel2_Normal = 80;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:816</i> */
		public static final int kEdsBatteryLevel2_Hi = 69;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:817</i> */
		public static final int kEdsBatteryLevel2_Quarter = 19;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:818</i> */
		public static final int kEdsBatteryLevel2_Error = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:819</i> */
		public static final int kEdsBatteryLevel2_BCLevel = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:820</i> */
		public static final long kEdsBatteryLevel2_AC = 0xFFFFFFFFL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsSaveTo {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:828</i> */
		public static final int kEdsSaveTo_Camera = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:829</i> */
		public static final int kEdsSaveTo_Host = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:830</i> */
		public static final int kEdsSaveTo_Both = (int)EdSdkLibrary.EdsSaveTo.kEdsSaveTo_Camera | (int)EdSdkLibrary.EdsSaveTo.kEdsSaveTo_Host;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsStorageType {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:839</i> */
		public static final int kEdsStorageType_Non = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:840</i> */
		public static final int kEdsStorageType_CF = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:841</i> */
		public static final int kEdsStorageType_SD = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:842</i> */
		public static final int kEdsStorageType_HD = 4;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsWhiteBalance {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:851</i> */
		public static final int kEdsWhiteBalance_Auto = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:852</i> */
		public static final int kEdsWhiteBalance_Daylight = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:853</i> */
		public static final int kEdsWhiteBalance_Cloudy = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:854</i> */
		public static final int kEdsWhiteBalance_Tangsten = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:855</i> */
		public static final int kEdsWhiteBalance_Fluorescent = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:856</i> */
		public static final int kEdsWhiteBalance_Strobe = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:857</i> */
		public static final int kEdsWhiteBalance_WhitePaper = 6;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:858</i> */
		public static final int kEdsWhiteBalance_Shade = 8;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:859</i> */
		public static final int kEdsWhiteBalance_ColorTemp = 9;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:860</i> */
		public static final int kEdsWhiteBalance_PCSet1 = 10;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:861</i> */
		public static final int kEdsWhiteBalance_PCSet2 = 11;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:862</i> */
		public static final int kEdsWhiteBalance_PCSet3 = 12;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:863</i> */
		public static final int kEdsWhiteBalance_WhitePaper2 = 15;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:864</i> */
		public static final int kEdsWhiteBalance_WhitePaper3 = 16;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:865</i> */
		public static final int kEdsWhiteBalance_WhitePaper4 = 18;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:866</i> */
		public static final int kEdsWhiteBalance_WhitePaper5 = 19;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:867</i> */
		public static final int kEdsWhiteBalance_PCSet4 = 20;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:868</i> */
		public static final int kEdsWhiteBalance_PCSet5 = 21;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:869</i> */
		public static final int kEdsWhiteBalance_Click = -1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:870</i> */
		public static final int kEdsWhiteBalance_Pasted = -2;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsPhotoEffect {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:879</i> */
		public static final int kEdsPhotoEffect_Off = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:880</i> */
		public static final int kEdsPhotoEffect_Monochrome = 5;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsColorMatrix {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:889</i> */
		public static final int kEdsColorMatrix_Custom = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:890</i> */
		public static final int kEdsColorMatrix_1 = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:891</i> */
		public static final int kEdsColorMatrix_2 = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:892</i> */
		public static final int kEdsColorMatrix_3 = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:893</i> */
		public static final int kEdsColorMatrix_4 = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:894</i> */
		public static final int kEdsColorMatrix_5 = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:895</i> */
		public static final int kEdsColorMatrix_6 = 6;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:896</i> */
		public static final int kEdsColorMatrix_7 = 7;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsFilterEffect {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:905</i> */
		public static final int kEdsFilterEffect_None = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:906</i> */
		public static final int kEdsFilterEffect_Yellow = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:907</i> */
		public static final int kEdsFilterEffect_Orange = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:908</i> */
		public static final int kEdsFilterEffect_Red = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:909</i> */
		public static final int kEdsFilterEffect_Green = 4;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsTonigEffect {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:918</i> */
		public static final int kEdsTonigEffect_None = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:919</i> */
		public static final int kEdsTonigEffect_Sepia = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:920</i> */
		public static final int kEdsTonigEffect_Blue = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:921</i> */
		public static final int kEdsTonigEffect_Purple = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:922</i> */
		public static final int kEdsTonigEffect_Green = 4;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsColorSpace {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:931</i> */
		public static final int kEdsColorSpace_sRGB = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:932</i> */
		public static final int kEdsColorSpace_AdobeRGB = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:933</i> */
		public static final long kEdsColorSpace_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsPictureStyle {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:942</i> */
		public static final int kEdsPictureStyle_Standard = 0x0081;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:943</i> */
		public static final int kEdsPictureStyle_Portrait = 0x0082;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:944</i> */
		public static final int kEdsPictureStyle_Landscape = 0x0083;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:945</i> */
		public static final int kEdsPictureStyle_Neutral = 0x0084;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:946</i> */
		public static final int kEdsPictureStyle_Faithful = 0x0085;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:947</i> */
		public static final int kEdsPictureStyle_Monochrome = 0x0086;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:948</i> */
		public static final int kEdsPictureStyle_Auto = 0x0087;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:949</i> */
		public static final int kEdsPictureStyle_User1 = 0x0021;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:950</i> */
		public static final int kEdsPictureStyle_User2 = 0x0022;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:951</i> */
		public static final int kEdsPictureStyle_User3 = 0x0023;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:952</i> */
		public static final int kEdsPictureStyle_PC1 = 0x0041;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:953</i> */
		public static final int kEdsPictureStyle_PC2 = 0x0042;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:954</i> */
		public static final int kEdsPictureStyle_PC3 = 0x0043;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsTransferOption {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:963</i> */
		public static final int kEdsTransferOption_ByDirectTransfer = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:964</i> */
		public static final int kEdsTransferOption_ByRelease = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:965</i> */
		public static final int kEdsTransferOption_ToDesktop = 0x00000100;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsAEMode {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:974</i> */
		public static final int kEdsAEMode_Program = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:975</i> */
		public static final int kEdsAEMode_Tv = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:976</i> */
		public static final int kEdsAEMode_Av = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:977</i> */
		public static final int kEdsAEMode_Manual = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:978</i> */
		public static final int kEdsAEMode_Bulb = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:979</i> */
		public static final int kEdsAEMode_A_DEP = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:980</i> */
		public static final int kEdsAEMode_DEP = 6;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:981</i> */
		public static final int kEdsAEMode_Custom = 7;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:982</i> */
		public static final int kEdsAEMode_Lock = 8;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:983</i> */
		public static final int kEdsAEMode_Green = 9;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:984</i> */
		public static final int kEdsAEMode_NightPortrait = 10;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:985</i> */
		public static final int kEdsAEMode_Sports = 11;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:986</i> */
		public static final int kEdsAEMode_Portrait = 12;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:987</i> */
		public static final int kEdsAEMode_Landscape = 13;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:988</i> */
		public static final int kEdsAEMode_Closeup = 14;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:989</i> */
		public static final int kEdsAEMode_FlashOff = 15;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:990</i> */
		public static final int kEdsAEMode_CreativeAuto = 19;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:991</i> */
		public static final int kEdsAEMode_Movie = 20;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:992</i> */
		public static final int kEdsAEMode_PhotoInMovie = 21;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:993</i> */
		public static final int kEdsAEMode_SceneIntelligentAuto = 22;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:994</i> */
		public static final int kEdsAEMode_SCN = 25;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:995</i> */
		public static final int kEdsAEMode_NightScenes = 23;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:996</i> */
		public static final int kEdsAEMode_BacklitScenes = 24;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:997</i> */
		public static final int kEdsAEMode_Children = 26;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:998</i> */
		public static final int kEdsAEMode_Food = 27;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:999</i> */
		public static final int kEdsAEMode_CandlelightPortraits = 28;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1000</i> */
		public static final long kEdsAEMode_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsBracket {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1009</i> */
		public static final int kEdsBracket_AEB = 0x01;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1010</i> */
		public static final int kEdsBracket_ISOB = 0x02;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1011</i> */
		public static final int kEdsBracket_WBB = 0x04;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1012</i> */
		public static final int kEdsBracket_FEB = 0x08;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1013</i> */
		public static final long kEdsBracket_Unknown = 0xffffffffL;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfOutputDevice {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1022</i> */
		public static final int kEdsEvfOutputDevice_TFT = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1023</i> */
		public static final int kEdsEvfOutputDevice_PC = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1024</i> */
		public static final int kEdsEvfOutputDevice_MOBILE = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1025</i> */
		public static final int kEdsEvfOutputDevice_MOBILE2 = 8;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfZoom {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1033</i> */
		public static final int kEdsEvfZoom_Fit = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1034</i> */
		public static final int kEdsEvfZoom_x5 = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1035</i> */
		public static final int kEdsEvfZoom_x10 = 10;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsEvfAFMode {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1043</i> */
		public static final int Evf_AFMode_Quick = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1044</i> */
		public static final int Evf_AFMode_Live = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1045</i> */
		public static final int Evf_AFMode_LiveFace = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1046</i> */
		public static final int Evf_AFMode_LiveMulti = 3;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsStroboMode {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1054</i> */
		public static final int kEdsStroboModeInternal = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1055</i> */
		public static final int kEdsStroboModeExternalETTL = 1;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1056</i> */
		public static final int kEdsStroboModeExternalATTL = 2;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1057</i> */
		public static final int kEdsStroboModeExternalTTL = 3;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1058</i> */
		public static final int kEdsStroboModeExternalAuto = 4;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1059</i> */
		public static final int kEdsStroboModeExternalManual = 5;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1060</i> */
		public static final int kEdsStroboModeManual = 6;
	};
	/**
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i><br>
	 * enum values
	 */
	public static interface EdsETTL2Mode {
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1068</i> */
		public static final int kEdsETTL2ModeEvaluative = 0;
		/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1069</i> */
		public static final int kEdsETTL2ModeAverage = 1;
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ISSPECIFIC_MASK = (int)0x80000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_COMPONENTID_MASK = (int)0x7F000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_RESERVED_MASK = (int)0x00FF0000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERRORID_MASK = (int)0x0000FFFF;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_CMP_ID_CLIENT_COMPONENTID = (int)0x01000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_CMP_ID_LLSDK_COMPONENTID = (int)0x02000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_CMP_ID_HLSDK_COMPONENTID = (int)0x03000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_OK = (int)0x00000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_UNIMPLEMENTED = (int)0x00000001;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INTERNAL_ERROR = (int)0x00000002;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_MEM_ALLOC_FAILED = (int)0x00000003;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_MEM_FREE_FAILED = (int)0x00000004;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_OPERATION_CANCELLED = (int)0x00000005;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INCOMPATIBLE_VERSION = (int)0x00000006;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_NOT_SUPPORTED = (int)0x00000007;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_UNEXPECTED_EXCEPTION = (int)0x00000008;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_PROTECTION_VIOLATION = (int)0x00000009;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_MISSING_SUBCOMPONENT = (int)0x0000000A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SELECTION_UNAVAILABLE = (int)0x0000000B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_IO_ERROR = (int)0x00000020;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_TOO_MANY_OPEN = (int)0x00000021;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_NOT_FOUND = (int)0x00000022;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_OPEN_ERROR = (int)0x00000023;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_CLOSE_ERROR = (int)0x00000024;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_SEEK_ERROR = (int)0x00000025;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_TELL_ERROR = (int)0x00000026;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_READ_ERROR = (int)0x00000027;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_WRITE_ERROR = (int)0x00000028;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_PERMISSION_ERROR = (int)0x00000029;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_DISK_FULL_ERROR = (int)0x0000002A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_ALREADY_EXISTS = (int)0x0000002B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_FORMAT_UNRECOGNIZED = (int)0x0000002C;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_DATA_CORRUPT = (int)0x0000002D;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_FILE_NAMING_NA = (int)0x0000002E;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DIR_NOT_FOUND = (int)0x00000040;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DIR_IO_ERROR = (int)0x00000041;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DIR_ENTRY_NOT_FOUND = (int)0x00000042;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DIR_ENTRY_EXISTS = (int)0x00000043;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DIR_NOT_EMPTY = (int)0x00000044;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_PROPERTIES_UNAVAILABLE = (int)0x00000050;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_PROPERTIES_MISMATCH = (int)0x00000051;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_PROPERTIES_NOT_LOADED = (int)0x00000053;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_PARAMETER = (int)0x00000060;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_HANDLE = (int)0x00000061;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_POINTER = (int)0x00000062;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_INDEX = (int)0x00000063;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_LENGTH = (int)0x00000064;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_FN_POINTER = (int)0x00000065;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_SORT_FN = (int)0x00000066;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_NOT_FOUND = (int)0x00000080;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_BUSY = (int)0x00000081;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_INVALID = (int)0x00000082;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_EMERGENCY = (int)0x00000083;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_MEMORY_FULL = (int)0x00000084;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_INTERNAL_ERROR = (int)0x00000085;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_INVALID_PARAMETER = (int)0x00000086;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_NO_DISK = (int)0x00000087;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_DISK_ERROR = (int)0x00000088;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_CF_GATE_CHANGED = (int)0x00000089;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_DIAL_CHANGED = (int)0x0000008A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_NOT_INSTALLED = (int)0x0000008B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_STAY_AWAKE = (int)0x0000008C;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_NOT_RELEASED = (int)0x0000008D;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_IO_ERROR = (int)0x000000A0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_NOT_OPEN = (int)0x000000A1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_ALREADY_OPEN = (int)0x000000A2;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_OPEN_ERROR = (int)0x000000A3;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_CLOSE_ERROR = (int)0x000000A4;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_SEEK_ERROR = (int)0x000000A5;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_TELL_ERROR = (int)0x000000A6;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_READ_ERROR = (int)0x000000A7;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_WRITE_ERROR = (int)0x000000A8;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_PERMISSION_ERROR = (int)0x000000A9;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_COULDNT_BEGIN_THREAD = (int)0x000000AA;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_BAD_OPTIONS = (int)0x000000AB;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STREAM_END_OF_STREAM = (int)0x000000AC;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_COMM_PORT_IS_IN_USE = (int)0x000000C0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_COMM_DISCONNECTED = (int)0x000000C1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_COMM_DEVICE_INCOMPATIBLE = (int)0x000000C2;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_COMM_BUFFER_FULL = (int)0x000000C3;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_COMM_USB_BUS_ERR = (int)0x000000C4;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_USB_DEVICE_LOCK_ERROR = (int)0x000000D0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_USB_DEVICE_UNLOCK_ERROR = (int)0x000000D1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STI_UNKNOWN_ERROR = (int)0x000000E0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STI_INTERNAL_ERROR = (int)0x000000E1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STI_DEVICE_CREATE_ERROR = (int)0x000000E2;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_STI_DEVICE_RELEASE_ERROR = (int)0x000000E3;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICE_NOT_LAUNCHED = (int)0x000000E4;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_ENUM_NA = (int)0x000000F0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_FN_CALL = (int)0x000000F1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_HANDLE_NOT_FOUND = (int)0x000000F2;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_ID = (int)0x000000F3;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_WAIT_TIMEOUT_ERROR = (int)0x000000F4;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SESSION_NOT_OPEN = (int)0x00002003;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_TRANSACTIONID = (int)0x00002004;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INCOMPLETE_TRANSFER = (int)0x00002007;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_STRAGEID = (int)0x00002008;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_DEVICEPROP_NOT_SUPPORTED = (int)0x0000200A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_OBJECTFORMATCODE = (int)0x0000200B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SELF_TEST_FAILED = (int)0x00002011;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_PARTIAL_DELETION = (int)0x00002012;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SPECIFICATION_BY_FORMAT_UNSUPPORTED = (int)0x00002014;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_NO_VALID_OBJECTINFO = (int)0x00002015;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_CODE_FORMAT = (int)0x00002016;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_UNKNOWN_VENDOR_CODE = (int)0x00002017;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_CAPTURE_ALREADY_TERMINATED = (int)0x00002018;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_PARENTOBJECT = (int)0x0000201A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_DEVICEPROP_FORMAT = (int)0x0000201B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_INVALID_DEVICEPROP_VALUE = (int)0x0000201C;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SESSION_ALREADY_OPEN = (int)0x0000201E;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TRANSACTION_CANCELLED = (int)0x0000201F;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_SPECIFICATION_OF_DESTINATION_UNSUPPORTED = (int)0x00002020;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_NOT_CAMERA_SUPPORT_SDK_VERSION = (int)0x00002021;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_UNKNOWN_COMMAND = (int)0x0000A001;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_OPERATION_REFUSED = (int)0x0000A005;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_LENS_COVER_CLOSE = (int)0x0000A006;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_LOW_BATTERY = (int)0x0000A101;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_OBJECT_NOTREADY = (int)0x0000A102;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_CANNOT_MAKE_OBJECT = (int)0x0000A104;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_MEMORYSTATUS_NOTREADY = (int)0x0000A106;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_AF_NG = (int)0x00008D01;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_RESERVED = (int)0x00008D02;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_MIRROR_UP_NG = (int)0x00008D03;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_SENSOR_CLEANING_NG = (int)0x00008D04;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_SILENCE_NG = (int)0x00008D05;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_NO_CARD_NG = (int)0x00008D06;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_CARD_NG = (int)0x00008D07;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_CARD_PROTECT_NG = (int)0x00008D08;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_MOVIE_CROP_NG = (int)0x00008D09;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_STROBO_CHARGE_NG = (int)0x00008D0A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_NO_LENS_NG = (int)0x00008D0B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_SPECIAL_MOVIE_MODE_NG = (int)0x00008D0C;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_TAKE_PICTURE_LV_REL_PROHIBIT_MODE_NG = (int)0x00008D0D;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKErrors.h</i> */
	public static final int EDS_ERR_LAST_GENERIC_ERROR_PLUS_ONE = (int)0x000000F5;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int EDS_MAX_NAME = (int)256;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int EDS_TRANSFER_BLOCK_SIZE = (int)512;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int NULL = (int)0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int FALSE = (int)0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int TRUE = (int)1;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Unknown = (int)0x0000ffff;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ProductName = (int)0x00000002;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_OwnerName = (int)0x00000004;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_MakerName = (int)0x00000005;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_DateTime = (int)0x00000006;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FirmwareVersion = (int)0x00000007;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_BatteryLevel = (int)0x00000008;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_CFn = (int)0x00000009;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_SaveTo = (int)0x0000000b;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_CurrentStorage = (int)0x0000000c;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_CurrentFolder = (int)0x0000000d;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_MyMenu = (int)0x0000000e;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_BatteryQuality = (int)0x00000010;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_BodyIDEx = (int)0x00000015;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_HDDirectoryStructure = (int)0x00000020;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ImageQuality = (int)0x00000100;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_JpegQuality = (int)0x00000101;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Orientation = (int)0x00000102;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ICCProfile = (int)0x00000103;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FocusInfo = (int)0x00000104;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_DigitalExposure = (int)0x00000105;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_WhiteBalance = (int)0x00000106;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ColorTemperature = (int)0x00000107;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_WhiteBalanceShift = (int)0x00000108;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Contrast = (int)0x00000109;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ColorSaturation = (int)0x0000010a;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ColorTone = (int)0x0000010b;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Sharpness = (int)0x0000010c;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ColorSpace = (int)0x0000010d;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ToneCurve = (int)0x0000010e;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_PhotoEffect = (int)0x0000010f;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FilterEffect = (int)0x00000110;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ToningEffect = (int)0x00000111;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ParameterSet = (int)0x00000112;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ColorMatrix = (int)0x00000113;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_PictureStyle = (int)0x00000114;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_PictureStyleDesc = (int)0x00000115;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_PictureStyleCaption = (int)0x00000200;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Linear = (int)0x00000300;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ClickWBPoint = (int)0x00000301;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_WBCoeffs = (int)0x00000302;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSVersionID = (int)0x00000800;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSLatitudeRef = (int)0x00000801;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSLatitude = (int)0x00000802;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSLongitudeRef = (int)0x00000803;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSLongitude = (int)0x00000804;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSAltitudeRef = (int)0x00000805;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSAltitude = (int)0x00000806;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSTimeStamp = (int)0x00000807;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSSatellites = (int)0x00000808;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSStatus = (int)0x00000809;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSMapDatum = (int)0x00000812;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_GPSDateStamp = (int)0x0000081D;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AtCapture_Flag = (int)0x80000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AEMode = (int)0x00000400;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_DriveMode = (int)0x00000401;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ISOSpeed = (int)0x00000402;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_MeteringMode = (int)0x00000403;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AFMode = (int)0x00000404;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Av = (int)0x00000405;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Tv = (int)0x00000406;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ExposureCompensation = (int)0x00000407;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FlashCompensation = (int)0x00000408;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FocalLength = (int)0x00000409;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AvailableShots = (int)0x0000040a;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Bracket = (int)0x0000040b;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_WhiteBalanceBracket = (int)0x0000040c;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_LensName = (int)0x0000040d;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AEBracket = (int)0x0000040e;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FEBracket = (int)0x0000040f;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_ISOBracket = (int)0x00000410;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_NoiseReduction = (int)0x00000411;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FlashOn = (int)0x00000412;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_RedEye = (int)0x00000413;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_FlashMode = (int)0x00000414;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_LensStatus = (int)0x00000416;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Artist = (int)0x00000418;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Copyright = (int)0x00000419;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_DepthOfField = (int)0x0000041b;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_EFCompensation = (int)0x0000041e;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_AEModeSelect = (int)0x00000436;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_OutputDevice = (int)0x00000500;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_Mode = (int)0x00000501;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_WhiteBalance = (int)0x00000502;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_ColorTemperature = (int)0x00000503;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_DepthOfFieldPreview = (int)0x00000504;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_Zoom = (int)0x00000507;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_ZoomPosition = (int)0x00000508;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_FocusAid = (int)0x00000509;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_Histogram = (int)0x0000050A;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_ImagePosition = (int)0x0000050B;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_HistogramStatus = (int)0x0000050C;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_AFMode = (int)0x0000050E;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Record = (int)0x00000510;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_HistogramY = (int)0x00000515;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_HistogramR = (int)0x00000516;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_HistogramG = (int)0x00000517;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_HistogramB = (int)0x00000518;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_CoordinateSystem = (int)0x00000540;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_ZoomRect = (int)0x00000541;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropID_Evf_ImageClipRect = (int)0x00000545;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_TakePicture = (int)0x00000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_ExtendShutDownTimer = (int)0x00000001;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_BulbStart = (int)0x00000002;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_BulbEnd = (int)0x00000003;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_DoEvfAf = (int)0x00000102;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_DriveLensEvf = (int)0x00000103;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_DoClickWBEvf = (int)0x00000104;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraCommand_PressShutterButton = (int)0x00000004;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraStatusCommand_UILock = (int)0x00000000;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraStatusCommand_UIUnLock = (int)0x00000001;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraStatusCommand_EnterDirectTransfer = (int)0x00000002;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsCameraStatusCommand_ExitDirectTransfer = (int)0x00000003;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropertyEvent_All = (int)0x00000100;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropertyEvent_PropertyChanged = (int)0x00000101;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsPropertyEvent_PropertyDescChanged = (int)0x00000102;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_All = (int)0x00000200;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_VolumeInfoChanged = (int)0x00000201;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_VolumeUpdateItems = (int)0x00000202;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_FolderUpdateItems = (int)0x00000203;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemCreated = (int)0x00000204;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemRemoved = (int)0x00000205;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemInfoChanged = (int)0x00000206;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemContentChanged = (int)0x00000207;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemRequestTransfer = (int)0x00000208;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemRequestTransferDT = (int)0x00000209;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_DirItemCancelTransferDT = (int)0x0000020a;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_VolumeAdded = (int)0x0000020c;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsObjectEvent_VolumeRemoved = (int)0x0000020d;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_All = (int)0x00000300;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_Shutdown = (int)0x00000301;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_JobStatusChanged = (int)0x00000302;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_WillSoonShutDown = (int)0x00000303;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_ShutDownTimerUpdate = (int)0x00000304;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_CaptureError = (int)0x00000305;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_InternalError = (int)0x00000306;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_AfResult = (int)0x00000309;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public static final int kEdsStateEvent_BulbExposureTime = (int)0x00000310;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h</i> */
	public static final int oldif = (int)0;
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public interface EdsProgressCallback extends StdCallLibrary.StdCallCallback {
		NativeLong apply(NativeLong inPercent, EdSdkLibrary.EdsVoid inContext, IntByReference outCancel);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public interface EdsCameraAddedHandler extends StdCallLibrary.StdCallCallback {
		NativeLong apply(EdSdkLibrary.EdsVoid inContext);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public interface EdsPropertyEventHandler extends StdCallLibrary.StdCallCallback {
		NativeLong apply(NativeLong inEvent, NativeLong inPropertyID, NativeLong inParam, EdSdkLibrary.EdsVoid inContext);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public interface EdsObjectEventHandler extends StdCallLibrary.StdCallCallback {
		NativeLong apply(NativeLong inEvent, Pointer inRef, EdSdkLibrary.EdsVoid inContext);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h</i> */
	public interface EdsStateEventHandler extends StdCallLibrary.StdCallCallback {
		NativeLong apply(NativeLong inEvent, NativeLong inEventData, EdSdkLibrary.EdsVoid inContext);
	};
	/**
	 * ----------------------------------------------------------------------------<br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1321</i>
	 */
	public interface EdsReadStream extends StdCallLibrary.StdCallCallback {
		NativeLong apply(Pointer inContext, NativeLong inReadSize, EdSdkLibrary.EdsVoid outBuffer, NativeLongByReference outReadSize);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1322</i> */
	public interface EdsWriteStream extends StdCallLibrary.StdCallCallback {
		NativeLong apply(Pointer inContext, NativeLong inWriteSize, EdSdkLibrary.EdsVoid inBuffer, NativeLongByReference outWrittenSize);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1323</i> */
	public interface EdsSeekStream extends StdCallLibrary.StdCallCallback {
		NativeLong apply(Pointer inContext, NativeLong inSeekOffset, int inSeekOrigin);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1324</i> */
	public interface EdsTellStream extends StdCallLibrary.StdCallCallback {
		NativeLong apply(Pointer inContext, NativeLongByReference outPosition);
	};
	/** <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDKTypes.h:1325</i> */
	public interface EdsGetStreamLength extends StdCallLibrary.StdCallCallback {
		NativeLong apply(Pointer inContext, NativeLongByReference outLength);
	};
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsInitializeSDK<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Initializes the libraries. <br>
	 * //      When using the EDSDK libraries, you must call this API once  <br>
	 * //          before using EDSDK APIs.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    None<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsInitializeSDK()</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:51</i>
	 */
	NativeLong EdsInitializeSDK();
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsTerminateSDK<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Terminates use of the libraries. <br>
	 * //      This function muse be called when ending the SDK.<br>
	 * //      Calling this function releases all resources allocated by the libraries.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    None<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsTerminateSDK()</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:68</i>
	 */
	NativeLong EdsTerminateSDK();
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRetain<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Increments the reference counter of existing objects.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference for the item.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsUInt32 EdsRetain(EdsBaseRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:93</i><br>
	 * @deprecated use the safer methods {@link #EdsRetain(edsdk.bindings.EdSdkLibrary.EdsBaseRef)} and {@link #EdsRetain(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsRetain(Pointer inRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRetain<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Increments the reference counter of existing objects.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference for the item.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsUInt32 EdsRetain(EdsBaseRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:93</i>
	 */
	NativeLong EdsRetain(EdSdkLibrary.EdsBaseRef inRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRelease<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Decrements the reference counter to an object. <br>
	 * //      When the reference counter reaches 0, the object is released.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //      Out:    None<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsUInt32 EdsRelease(EdsBaseRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:109</i><br>
	 * @deprecated use the safer methods {@link #EdsRelease(edsdk.bindings.EdSdkLibrary.EdsBaseRef)} and {@link #EdsRelease(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsRelease(Pointer inRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRelease<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Decrements the reference counter to an object. <br>
	 * //      When the reference counter reaches 0, the object is released.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //      Out:    None<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsUInt32 EdsRelease(EdsBaseRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:109</i>
	 */
	NativeLong EdsRelease(EdSdkLibrary.EdsBaseRef inRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetChildCount<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the number of child objects of the designated object.<br>
	 * //      Example: Number of files in a directory<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the list.<br>
	 * //      Out:    outCount - Number of elements in this list.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetChildCount(EdsBaseRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:135</i><br>
	 * @deprecated use the safer methods {@link #EdsGetChildCount(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsGetChildCount(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetChildCount(Pointer inRef, NativeLongByReference outCount);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetChildCount<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the number of child objects of the designated object.<br>
	 * //      Example: Number of files in a directory<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the list.<br>
	 * //      Out:    outCount - Number of elements in this list.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetChildCount(EdsBaseRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:135</i>
	 */
	NativeLong EdsGetChildCount(EdSdkLibrary.EdsBaseRef inRef, NativeLongByReference outCount);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetChildAtIndex<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Gets an indexed child object of the designated object. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inIndex -  The index that is passed in, is zero based.<br>
	 * //      Out:    outRef - The pointer which receives reference of the <br>
	 * //                           specified index .<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetChildAtIndex(EdsBaseRef, EdsInt32, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:154</i><br>
	 * @deprecated use the safer methods {@link #EdsGetChildAtIndex(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.NativeLong, com.sun.jna.ptr.PointerByReference)} and {@link #EdsGetChildAtIndex(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetChildAtIndex(Pointer inRef, NativeLong inIndex, Pointer outRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetChildAtIndex<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Gets an indexed child object of the designated object. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inIndex -  The index that is passed in, is zero based.<br>
	 * //      Out:    outRef - The pointer which receives reference of the <br>
	 * //                           specified index .<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetChildAtIndex(EdsBaseRef, EdsInt32, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:154</i>
	 */
	NativeLong EdsGetChildAtIndex(EdSdkLibrary.EdsBaseRef inRef, NativeLong inIndex, PointerByReference outRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetChildAtIndex<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Gets an indexed child object of the designated object. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inIndex -  The index that is passed in, is zero based.<br>
	 * //      Out:    outRef - The pointer which receives reference of the <br>
	 * //                           specified index .<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetChildAtIndex(EdsBaseRef, EdsInt32, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:154</i>
	 */
	NativeLong EdsGetChildAtIndex(Pointer inRef, NativeLong inIndex, PointerByReference outRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetParent<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the parent object of the designated object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef        - The reference of the item.<br>
	 * //      Out:    outParentRef - The pointer which receives reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetParent(EdsBaseRef, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:172</i><br>
	 * @deprecated use the safer methods {@link #EdsGetParent(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.ptr.PointerByReference)} and {@link #EdsGetParent(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetParent(Pointer inRef, Pointer outParentRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetParent<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the parent object of the designated object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef        - The reference of the item.<br>
	 * //      Out:    outParentRef - The pointer which receives reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetParent(EdsBaseRef, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:172</i>
	 */
	NativeLong EdsGetParent(EdSdkLibrary.EdsBaseRef inRef, PointerByReference outParentRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetParent<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the parent object of the designated object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef        - The reference of the item.<br>
	 * //      Out:    outParentRef - The pointer which receives reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetParent(EdsBaseRef, EdsBaseRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:172</i>
	 */
	NativeLong EdsGetParent(Pointer inRef, PointerByReference outParentRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPropertySize<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the byte size and data type of a designated property <br>
	 * //          from a camera object or image object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //                   We use this parameter in order to specify an index<br>
	 * //                   in case there are two or more values over the same ID.<br>
	 * //      Out:    outDataType - Pointer to the buffer that is to receive the property<br>
	 * //                        type data.<br>
	 * //              outSize - Pointer to the buffer that is to receive the property<br>
	 * //                        size.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertySize(EdsBaseRef, EdsPropertyID, EdsInt32, EdsDataType*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:206</i><br>
	 * @deprecated use the safer methods {@link #EdsGetPropertySize(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.NativeLong, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsGetPropertySize(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetPropertySize(Pointer inRef, NativeLong inPropertyID, NativeLong inParam, IntByReference outDataType, NativeLongByReference outSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPropertySize<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the byte size and data type of a designated property <br>
	 * //          from a camera object or image object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //                   We use this parameter in order to specify an index<br>
	 * //                   in case there are two or more values over the same ID.<br>
	 * //      Out:    outDataType - Pointer to the buffer that is to receive the property<br>
	 * //                        type data.<br>
	 * //              outSize - Pointer to the buffer that is to receive the property<br>
	 * //                        size.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertySize(EdsBaseRef, EdsPropertyID, EdsInt32, EdsDataType*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:206</i>
	 */
	NativeLong EdsGetPropertySize(EdSdkLibrary.EdsBaseRef inRef, NativeLong inPropertyID, NativeLong inParam, IntBuffer outDataType, NativeLongByReference outSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPropertyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets property information from the object designated in inRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //                   We use this parameter in order to specify an index<br>
	 * //                   in case there are two or more values over the same ID.<br>
	 * //              inPropertySize - The number of bytes of the prepared buffer<br>
	 * //                  for receive property-value.<br>
	 * //       Out:   outPropertyData - The buffer pointer to receive property-value.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertyData(EdsBaseRef, EdsPropertyID, EdsInt32, EdsUInt32, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:232</i><br>
	 * @deprecated use the safer methods {@link #EdsGetPropertyData(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsGetPropertyData(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsGetPropertyData(Pointer inRef, NativeLong inPropertyID, NativeLong inParam, NativeLong inPropertySize, EdSdkLibrary.EdsVoid outPropertyData);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPropertyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets property information from the object designated in inRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //                   We use this parameter in order to specify an index<br>
	 * //                   in case there are two or more values over the same ID.<br>
	 * //              inPropertySize - The number of bytes of the prepared buffer<br>
	 * //                  for receive property-value.<br>
	 * //       Out:   outPropertyData - The buffer pointer to receive property-value.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertyData(EdsBaseRef, EdsPropertyID, EdsInt32, EdsUInt32, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:232</i>
	 */
	NativeLong EdsGetPropertyData(EdSdkLibrary.EdsBaseRef inRef, NativeLong inPropertyID, NativeLong inParam, NativeLong inPropertySize, EdSdkLibrary.EdsVoid outPropertyData);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetPropertyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Sets property data for the object designated in inRef. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //              inPropertySize - The number of bytes of the prepared buffer<br>
	 * //                  for set property-value.<br>
	 * //              inPropertyData - The buffer pointer to set property-value.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetPropertyData(EdsBaseRef, EdsPropertyID, EdsInt32, EdsUInt32, const EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:257</i><br>
	 * @deprecated use the safer methods {@link #EdsSetPropertyData(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsSetPropertyData(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsSetPropertyData(Pointer inRef, NativeLong inPropertyID, NativeLong inParam, NativeLong inPropertySize, EdSdkLibrary.EdsVoid inPropertyData);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetPropertyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Sets property data for the object designated in inRef. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the item.<br>
	 * //              inPropertyID - The ProprtyID<br>
	 * //              inParam - Additional information of property.<br>
	 * //              inPropertySize - The number of bytes of the prepared buffer<br>
	 * //                  for set property-value.<br>
	 * //              inPropertyData - The buffer pointer to set property-value.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetPropertyData(EdsBaseRef, EdsPropertyID, EdsInt32, EdsUInt32, const EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:257</i>
	 */
	NativeLong EdsSetPropertyData(EdSdkLibrary.EdsBaseRef inRef, NativeLong inPropertyID, NativeLong inParam, NativeLong inPropertySize, EdSdkLibrary.EdsVoid inPropertyData);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //  <br>
	 * //  Function:   EdsGetPropertyDesc<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets a list of property data that can be set for the object <br>
	 * //          designated in inRef, as well as maximum and minimum values. <br>
	 * //      This API is intended for only some shooting-related properties.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the camera.<br>
	 * //              inPropertyID - The Property ID.<br>
	 * //       Out:   outPropertyDesc - Array of the value which can be set up.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertyDesc(EdsBaseRef, EdsPropertyID, EdsPropertyDesc*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:280</i><br>
	 * @deprecated use the safer methods {@link #EdsGetPropertyDesc(edsdk.bindings.EdSdkLibrary.EdsBaseRef, com.sun.jna.NativeLong, edsdk.bindings.tagEdsPropertyDesc)} and {@link #EdsGetPropertyDesc(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.tagEdsPropertyDesc)} instead
	 */
	@Deprecated 
	NativeLong EdsGetPropertyDesc(Pointer inRef, NativeLong inPropertyID, tagEdsPropertyDesc outPropertyDesc);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //  <br>
	 * //  Function:   EdsGetPropertyDesc<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets a list of property data that can be set for the object <br>
	 * //          designated in inRef, as well as maximum and minimum values. <br>
	 * //      This API is intended for only some shooting-related properties.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the camera.<br>
	 * //              inPropertyID - The Property ID.<br>
	 * //       Out:   outPropertyDesc - Array of the value which can be set up.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPropertyDesc(EdsBaseRef, EdsPropertyID, EdsPropertyDesc*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:280</i>
	 */
	NativeLong EdsGetPropertyDesc(EdSdkLibrary.EdsBaseRef inRef, NativeLong inPropertyID, tagEdsPropertyDesc outPropertyDesc);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetCameraList<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets camera list objects.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    None<br>
	 * //      Out:    outCameraListRef - Pointer to the camera-list.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetCameraList(EdsCameraListRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:307</i><br>
	 * @deprecated use the safer method {@link #EdsGetCameraList(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetCameraList(Pointer outCameraListRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetCameraList<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets camera list objects.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    None<br>
	 * //      Out:    outCameraListRef - Pointer to the camera-list.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetCameraList(EdsCameraListRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:307</i>
	 */
	NativeLong EdsGetCameraList(PointerByReference outCameraListRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetDeviceInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets device information, such as the device name.  <br>
	 * //      Because device information of remote cameras is stored <br>
	 * //          on the host computer, you can use this API <br>
	 * //          before the camera object initiates communication<br>
	 * //          (that is, before a session is opened). <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera.<br>
	 * //      Out:    outDeviceInfo - Information as device of camera.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetDeviceInfo(EdsCameraRef, EdsDeviceInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:336</i><br>
	 * @deprecated use the safer methods {@link #EdsGetDeviceInfo(edsdk.bindings.EdSdkLibrary.EdsCameraRef, edsdk.bindings.tagEdsDeviceInfo)} and {@link #EdsGetDeviceInfo(com.sun.jna.Pointer, edsdk.bindings.tagEdsDeviceInfo)} instead
	 */
	@Deprecated 
	NativeLong EdsGetDeviceInfo(Pointer inCameraRef, tagEdsDeviceInfo outDeviceInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetDeviceInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets device information, such as the device name.  <br>
	 * //      Because device information of remote cameras is stored <br>
	 * //          on the host computer, you can use this API <br>
	 * //          before the camera object initiates communication<br>
	 * //          (that is, before a session is opened). <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera.<br>
	 * //      Out:    outDeviceInfo - Information as device of camera.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetDeviceInfo(EdsCameraRef, EdsDeviceInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:336</i>
	 */
	NativeLong EdsGetDeviceInfo(EdSdkLibrary.EdsCameraRef inCameraRef, tagEdsDeviceInfo outDeviceInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsOpenSession<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Establishes a logical connection with a remote camera. <br>
	 * //      Use this API after getting the camera's EdsCamera object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsOpenSession(EdsCameraRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:354</i><br>
	 * @deprecated use the safer methods {@link #EdsOpenSession(edsdk.bindings.EdSdkLibrary.EdsCameraRef)} and {@link #EdsOpenSession(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsOpenSession(Pointer inCameraRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsOpenSession<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Establishes a logical connection with a remote camera. <br>
	 * //      Use this API after getting the camera's EdsCamera object.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsOpenSession(EdsCameraRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:354</i>
	 */
	NativeLong EdsOpenSession(EdSdkLibrary.EdsCameraRef inCameraRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCloseSession<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Closes a logical connection with a remote camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCloseSession(EdsCameraRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:370</i><br>
	 * @deprecated use the safer methods {@link #EdsCloseSession(edsdk.bindings.EdSdkLibrary.EdsCameraRef)} and {@link #EdsCloseSession(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsCloseSession(Pointer inCameraRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCloseSession<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Closes a logical connection with a remote camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCloseSession(EdsCameraRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:370</i>
	 */
	NativeLong EdsCloseSession(EdSdkLibrary.EdsCameraRef inCameraRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSendCommand<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Sends a command such as "Shoot" to a remote camera. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inCommand - Specifies the command to be sent.<br>
	 * //              inParam -     Specifies additional command-specific information.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSendCommand(EdsCameraRef, EdsCameraCommand, EdsInt32)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:389</i><br>
	 * @deprecated use the safer methods {@link #EdsSendCommand(edsdk.bindings.EdSdkLibrary.EdsCameraRef, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} and {@link #EdsSendCommand(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	NativeLong EdsSendCommand(Pointer inCameraRef, NativeLong inCommand, NativeLong inParam);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSendCommand<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Sends a command such as "Shoot" to a remote camera. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inCommand - Specifies the command to be sent.<br>
	 * //              inParam -     Specifies additional command-specific information.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSendCommand(EdsCameraRef, EdsCameraCommand, EdsInt32)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:389</i>
	 */
	NativeLong EdsSendCommand(EdSdkLibrary.EdsCameraRef inCameraRef, NativeLong inCommand, NativeLong inParam);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSendStatusCommand<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Sets the remote camera state or mode.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inStatusCommand - Specifies the command to be sent.<br>
	 * //              inParam -     Specifies additional command-specific information.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSendStatusCommand(EdsCameraRef, EdsCameraStatusCommand, EdsInt32)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:410</i><br>
	 * @deprecated use the safer methods {@link #EdsSendStatusCommand(edsdk.bindings.EdSdkLibrary.EdsCameraRef, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} and {@link #EdsSendStatusCommand(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	NativeLong EdsSendStatusCommand(Pointer inCameraRef, NativeLong inStatusCommand, NativeLong inParam);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSendStatusCommand<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Sets the remote camera state or mode.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inStatusCommand - Specifies the command to be sent.<br>
	 * //              inParam -     Specifies additional command-specific information.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSendStatusCommand(EdsCameraRef, EdsCameraStatusCommand, EdsInt32)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:410</i>
	 */
	NativeLong EdsSendStatusCommand(EdSdkLibrary.EdsCameraRef inCameraRef, NativeLong inStatusCommand, NativeLong inParam);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetCapacity<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Sets the remaining HDD capacity on the host computer<br>
	 * //          (excluding the portion from image transfer),<br>
	 * //          as calculated by subtracting the portion from the previous time. <br>
	 * //      Set a reset flag initially and designate the cluster length <br>
	 * //          and number of free clusters.<br>
	 * //      Some type 2 protocol standard cameras can display the number of shots <br>
	 * //          left on the camera based on the available disk capacity <br>
	 * //          of the host computer. <br>
	 * //      For these cameras, after the storage destination is set to the computer, <br>
	 * //          use this API to notify the camera of the available disk capacity <br>
	 * //          of the host computer.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inCapacity -  The remaining capacity of a transmission place.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetCapacity(EdsCameraRef, EdsCapacity)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:441</i><br>
	 * @deprecated use the safer methods {@link #EdsSetCapacity(edsdk.bindings.EdSdkLibrary.EdsCameraRef, edsdk.bindings.tagEdsCapacity.ByValue)} and {@link #EdsSetCapacity(com.sun.jna.Pointer, edsdk.bindings.tagEdsCapacity.ByValue)} instead
	 */
	@Deprecated 
	NativeLong EdsSetCapacity(Pointer inCameraRef, edsdk.bindings.tagEdsCapacity.ByValue inCapacity);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetCapacity<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Sets the remaining HDD capacity on the host computer<br>
	 * //          (excluding the portion from image transfer),<br>
	 * //          as calculated by subtracting the portion from the previous time. <br>
	 * //      Set a reset flag initially and designate the cluster length <br>
	 * //          and number of free clusters.<br>
	 * //      Some type 2 protocol standard cameras can display the number of shots <br>
	 * //          left on the camera based on the available disk capacity <br>
	 * //          of the host computer. <br>
	 * //      For these cameras, after the storage destination is set to the computer, <br>
	 * //          use this API to notify the camera of the available disk capacity <br>
	 * //          of the host computer.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - The reference of the camera which will receive the <br>
	 * //                      command.<br>
	 * //              inCapacity -  The remaining capacity of a transmission place.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetCapacity(EdsCameraRef, EdsCapacity)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:441</i>
	 */
	NativeLong EdsSetCapacity(EdSdkLibrary.EdsCameraRef inCameraRef, edsdk.bindings.tagEdsCapacity.ByValue inCapacity);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetVolumeInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets volume information for a memory card in the camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inVolumeRef - The reference of the volume.<br>
	 * //      Out:    outVolumeInfo - information of  the volume.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetVolumeInfo(EdsVolumeRef, EdsVolumeInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:467</i><br>
	 * @deprecated use the safer methods {@link #EdsGetVolumeInfo(edsdk.bindings.EdSdkLibrary.EdsVolumeRef, edsdk.bindings.tagEdsVolumeInfo)} and {@link #EdsGetVolumeInfo(com.sun.jna.Pointer, edsdk.bindings.tagEdsVolumeInfo)} instead
	 */
	@Deprecated 
	NativeLong EdsGetVolumeInfo(Pointer inVolumeRef, tagEdsVolumeInfo outVolumeInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetVolumeInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets volume information for a memory card in the camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inVolumeRef - The reference of the volume.<br>
	 * //      Out:    outVolumeInfo - information of  the volume.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetVolumeInfo(EdsVolumeRef, EdsVolumeInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:467</i>
	 */
	NativeLong EdsGetVolumeInfo(EdSdkLibrary.EdsVolumeRef inVolumeRef, tagEdsVolumeInfo outVolumeInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsFormatVolume<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Formats volumes of memory cards in a camera. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inVolumeRef - The reference of volume .<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsFormatVolume(EdsVolumeRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:483</i><br>
	 * @deprecated use the safer methods {@link #EdsFormatVolume(edsdk.bindings.EdSdkLibrary.EdsVolumeRef)} and {@link #EdsFormatVolume(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsFormatVolume(Pointer inVolumeRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsFormatVolume<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Formats volumes of memory cards in a camera. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inVolumeRef - The reference of volume .<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsFormatVolume(EdsVolumeRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:483</i>
	 */
	NativeLong EdsFormatVolume(EdSdkLibrary.EdsVolumeRef inVolumeRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetDirectoryItemInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets information about the directory or file objects <br>
	 * //          on the memory card (volume) in a remote camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //      Out:    outDirItemInfo - information of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetDirectoryItemInfo(EdsDirectoryItemRef, EdsDirectoryItemInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:509</i><br>
	 * @deprecated use the safer methods {@link #EdsGetDirectoryItemInfo(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef, edsdk.bindings.tagEdsDirectoryItemInfo)} and {@link #EdsGetDirectoryItemInfo(com.sun.jna.Pointer, edsdk.bindings.tagEdsDirectoryItemInfo)} instead
	 */
	@Deprecated 
	NativeLong EdsGetDirectoryItemInfo(Pointer inDirItemRef, tagEdsDirectoryItemInfo outDirItemInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetDirectoryItemInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets information about the directory or file objects <br>
	 * //          on the memory card (volume) in a remote camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //      Out:    outDirItemInfo - information of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetDirectoryItemInfo(EdsDirectoryItemRef, EdsDirectoryItemInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:509</i>
	 */
	NativeLong EdsGetDirectoryItemInfo(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef, tagEdsDirectoryItemInfo outDirItemInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDeleteDirectoryItem<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Deletes a camera folder or file.<br>
	 * //      If folders with subdirectories are designated, all files are deleted <br>
	 * //          except protected files. <br>
	 * //      EdsDirectoryItem objects deleted by means of this API are implicitly <br>
	 * //          released by the EDSDK. Thus, there is no need to release them <br>
	 * //          by means of EdsRelease.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDeleteDirectoryItem(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:531</i><br>
	 * @deprecated use the safer methods {@link #EdsDeleteDirectoryItem(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef)} and {@link #EdsDeleteDirectoryItem(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDeleteDirectoryItem(Pointer inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDeleteDirectoryItem<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Deletes a camera folder or file.<br>
	 * //      If folders with subdirectories are designated, all files are deleted <br>
	 * //          except protected files. <br>
	 * //      EdsDirectoryItem objects deleted by means of this API are implicitly <br>
	 * //          released by the EDSDK. Thus, there is no need to release them <br>
	 * //          by means of EdsRelease.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDeleteDirectoryItem(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:531</i>
	 */
	NativeLong EdsDeleteDirectoryItem(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownload<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Downloads a file on a remote camera <br>
	 * //          (in the camera memory or on a memory card) to the host computer. <br>
	 * //      The downloaded file is sent directly to a file stream created in advance. <br>
	 * //      When dividing the file being retrieved, call this API repeatedly. <br>
	 * //      Also in this case, make the data block size a multiple of 512 (bytes), <br>
	 * //          excluding the final block.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //              inReadSize   - <br>
	 * //<br>
	 * //      Out:    outStream    - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownload(EdsDirectoryItemRef, EdsUInt32, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:554</i><br>
	 * @deprecated use the safer methods {@link #EdsDownload(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsStreamRef)} and {@link #EdsDownload(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDownload(Pointer inDirItemRef, NativeLong inReadSize, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownload<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Downloads a file on a remote camera <br>
	 * //          (in the camera memory or on a memory card) to the host computer. <br>
	 * //      The downloaded file is sent directly to a file stream created in advance. <br>
	 * //      When dividing the file being retrieved, call this API repeatedly. <br>
	 * //      Also in this case, make the data block size a multiple of 512 (bytes), <br>
	 * //          excluding the final block.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //              inReadSize   - <br>
	 * //<br>
	 * //      Out:    outStream    - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownload(EdsDirectoryItemRef, EdsUInt32, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:554</i>
	 */
	NativeLong EdsDownload(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef, NativeLong inReadSize, EdSdkLibrary.EdsStreamRef outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadCancel<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Must be executed when downloading of a directory item is canceled. <br>
	 * //      Calling this API makes the camera cancel file transmission.<br>
	 * //      It also releases resources. <br>
	 * //      This operation need not be executed when using EdsDownloadThumbnail. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadCancel(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:574</i><br>
	 * @deprecated use the safer methods {@link #EdsDownloadCancel(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef)} and {@link #EdsDownloadCancel(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDownloadCancel(Pointer inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadCancel<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Must be executed when downloading of a directory item is canceled. <br>
	 * //      Calling this API makes the camera cancel file transmission.<br>
	 * //      It also releases resources. <br>
	 * //      This operation need not be executed when using EdsDownloadThumbnail. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadCancel(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:574</i>
	 */
	NativeLong EdsDownloadCancel(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadComplete<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Must be called when downloading of directory items is complete. <br>
	 * //          Executing this API makes the camera <br>
	 * //              recognize that file transmission is complete. <br>
	 * //          This operation need not be executed when using EdsDownloadThumbnail.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //      Out:    outStream    - None.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadComplete(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:594</i><br>
	 * @deprecated use the safer methods {@link #EdsDownloadComplete(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef)} and {@link #EdsDownloadComplete(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDownloadComplete(Pointer inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadComplete<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Must be called when downloading of directory items is complete. <br>
	 * //          Executing this API makes the camera <br>
	 * //              recognize that file transmission is complete. <br>
	 * //          This operation need not be executed when using EdsDownloadThumbnail.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //      Out:    outStream    - None.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadComplete(EdsDirectoryItemRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:594</i>
	 */
	NativeLong EdsDownloadComplete(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadThumbnail<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Extracts and downloads thumbnail information from image files in a camera. <br>
	 * //      Thumbnail information in the camera's image files is downloaded <br>
	 * //          to the host computer. <br>
	 * //      Downloaded thumbnails are sent directly to a file stream created in advance.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadThumbnail(EdsDirectoryItemRef, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:614</i><br>
	 * @deprecated use the safer methods {@link #EdsDownloadThumbnail(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef, edsdk.bindings.EdSdkLibrary.EdsStreamRef)} and {@link #EdsDownloadThumbnail(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDownloadThumbnail(Pointer inDirItemRef, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadThumbnail<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Extracts and downloads thumbnail information from image files in a camera. <br>
	 * //      Thumbnail information in the camera's image files is downloaded <br>
	 * //          to the host computer. <br>
	 * //      Downloaded thumbnails are sent directly to a file stream created in advance.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadThumbnail(EdsDirectoryItemRef, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:614</i>
	 */
	NativeLong EdsDownloadThumbnail(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef, EdSdkLibrary.EdsStreamRef outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetAttribute<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets attributes of files on a camera.<br>
	 * //  <br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //      Out:    outFileAttribute  - Indicates the file attributes. <br>
	 * //                  As for the file attributes, OR values of the value defined<br>
	 * //                  by enum EdsFileAttributes can be retrieved. Thus, when <br>
	 * //                  determining the file attributes, you must check <br>
	 * //                  if an attribute flag is set for target attributes. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetAttribute(EdsDirectoryItemRef, EdsFileAttributes*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:635</i><br>
	 * @deprecated use the safer methods {@link #EdsGetAttribute(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef, java.nio.IntBuffer)} and {@link #EdsGetAttribute(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetAttribute(Pointer inDirItemRef, IntByReference outFileAttribute);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetAttribute<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets attributes of files on a camera.<br>
	 * //  <br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //      Out:    outFileAttribute  - Indicates the file attributes. <br>
	 * //                  As for the file attributes, OR values of the value defined<br>
	 * //                  by enum EdsFileAttributes can be retrieved. Thus, when <br>
	 * //                  determining the file attributes, you must check <br>
	 * //                  if an attribute flag is set for target attributes. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetAttribute(EdsDirectoryItemRef, EdsFileAttributes*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:635</i>
	 */
	NativeLong EdsGetAttribute(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef, IntBuffer outFileAttribute);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetAttribute<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Changes attributes of files on a camera.<br>
	 * //  <br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //              inFileAttribute  - Indicates the file attributes. <br>
	 * //                      As for the file attributes, OR values of the value <br>
	 * //                      defined by enum EdsFileAttributes can be retrieved. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetAttribute(EdsDirectoryItemRef, EdsFileAttributes)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:655</i><br>
	 * @deprecated use the safer methods {@link #EdsSetAttribute(edsdk.bindings.EdSdkLibrary.EdsDirectoryItemRef, int)} and {@link #EdsSetAttribute(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	NativeLong EdsSetAttribute(Pointer inDirItemRef, int inFileAttribute);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetAttribute<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Changes attributes of files on a camera.<br>
	 * //  <br>
	 * //  Parameters:<br>
	 * //       In:    inDirItemRef - The reference of the directory item.<br>
	 * //              inFileAttribute  - Indicates the file attributes. <br>
	 * //                      As for the file attributes, OR values of the value <br>
	 * //                      defined by enum EdsFileAttributes can be retrieved. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetAttribute(EdsDirectoryItemRef, EdsFileAttributes)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:655</i>
	 */
	NativeLong EdsSetAttribute(EdSdkLibrary.EdsDirectoryItemRef inDirItemRef, int inFileAttribute);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateFileStream<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a new file on a host computer (or opens an existing file) <br>
	 * //          and creates a file stream for access to the file. <br>
	 * //      If a new file is designated before executing this API, <br>
	 * //          the file is actually created following the timing of writing <br>
	 * //          by means of EdsWrite or the like with respect to an open stream.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inFileName - Pointer to a null-terminated string that specifies<br>
	 * //                           the file name.<br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStream(const EdsChar*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:690</i><br>
	 * @deprecated use the safer methods {@link #EdsCreateFileStream(java.nio.ByteBuffer, int, int, com.sun.jna.ptr.PointerByReference)} and {@link #EdsCreateFileStream(com.sun.jna.Pointer, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateFileStream(Pointer inFileName, int inCreateDisposition, int inDesiredAccess, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateFileStream<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a new file on a host computer (or opens an existing file) <br>
	 * //          and creates a file stream for access to the file. <br>
	 * //      If a new file is designated before executing this API, <br>
	 * //          the file is actually created following the timing of writing <br>
	 * //          by means of EdsWrite or the like with respect to an open stream.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inFileName - Pointer to a null-terminated string that specifies<br>
	 * //                           the file name.<br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStream(const EdsChar*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:690</i>
	 */
	NativeLong EdsCreateFileStream(ByteBuffer inFileName, int inCreateDisposition, int inDesiredAccess, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateFileStream<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a new file on a host computer (or opens an existing file) <br>
	 * //          and creates a file stream for access to the file. <br>
	 * //      If a new file is designated before executing this API, <br>
	 * //          the file is actually created following the timing of writing <br>
	 * //          by means of EdsWrite or the like with respect to an open stream.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inFileName - Pointer to a null-terminated string that specifies<br>
	 * //                           the file name.<br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStream(const EdsChar*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:690</i>
	 */
	NativeLong EdsCreateFileStream(Pointer inFileName, int inCreateDisposition, int inDesiredAccess, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateMemoryStream<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a stream in the memory of a host computer. <br>
	 * //      In the case of writing in excess of the allocated buffer size, <br>
	 * //          the memory is automatically extended.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inBufferSize - The number of bytes of the memory to allocate.<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateMemoryStream(EdsUInt32, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:712</i><br>
	 * @deprecated use the safer method {@link #EdsCreateMemoryStream(com.sun.jna.NativeLong, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateMemoryStream(NativeLong inBufferSize, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateMemoryStream<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a stream in the memory of a host computer. <br>
	 * //      In the case of writing in excess of the allocated buffer size, <br>
	 * //          the memory is automatically extended.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inBufferSize - The number of bytes of the memory to allocate.<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateMemoryStream(EdsUInt32, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:712</i>
	 */
	NativeLong EdsCreateMemoryStream(NativeLong inBufferSize, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateStreamEx<br>
	 * //<br>
	 * //  Description:<br>
	 * //      An extended version of EdsCreateStreamFromFile. <br>
	 * //      Use this function when working with Unicode file names.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inURL (for Macintosh) - Designate CFURLRef. <br>
	 * //              inFileName (for Windows) - Designate the file name. <br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStreamEx(const WCHAR*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:736</i><br>
	 * @deprecated use the safer methods {@link #EdsCreateFileStreamEx(short[], int, int, com.sun.jna.ptr.PointerByReference)} and {@link #EdsCreateFileStreamEx(com.sun.jna.ptr.ShortByReference, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateFileStreamEx(ShortByReference inFileName, int inCreateDisposition, int inDesiredAccess, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateStreamEx<br>
	 * //<br>
	 * //  Description:<br>
	 * //      An extended version of EdsCreateStreamFromFile. <br>
	 * //      Use this function when working with Unicode file names.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inURL (for Macintosh) - Designate CFURLRef. <br>
	 * //              inFileName (for Windows) - Designate the file name. <br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStreamEx(const WCHAR*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:736</i>
	 */
	NativeLong EdsCreateFileStreamEx(short inFileName[], int inCreateDisposition, int inDesiredAccess, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateStreamEx<br>
	 * //<br>
	 * //  Description:<br>
	 * //      An extended version of EdsCreateStreamFromFile. <br>
	 * //      Use this function when working with Unicode file names.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inURL (for Macintosh) - Designate CFURLRef. <br>
	 * //              inFileName (for Windows) - Designate the file name. <br>
	 * //              inCreateDisposition - Action to take on files that exist, <br>
	 * //                                and which action to take when files do not exist.  <br>
	 * //              inDesiredAccess - Access to the stream (reading, writing, or both).<br>
	 * //<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateFileStreamEx(const WCHAR*, EdsFileCreateDisposition, EdsAccess, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:736</i>
	 */
	NativeLong EdsCreateFileStreamEx(ShortByReference inFileName, int inCreateDisposition, int inDesiredAccess, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateMemoryStreamFromPointer<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a stream from the memory buffer you prepare. <br>
	 * //      Unlike the buffer size of streams created by means of EdsCreateMemoryStream, <br>
	 * //      the buffer size you prepare for streams created this way does not expand.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inUserBuffer - Pointer to the buffer you have prepared.<br>
	 * //                    Streams created by means of this API lead to this buffer. <br>
	 * //              inBufferSize - The number of bytes of the memory to allocate.<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateMemoryStreamFromPointer(EdsVoid*, EdsUInt32, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:766</i><br>
	 * @deprecated use the safer method {@link #EdsCreateMemoryStreamFromPointer(edsdk.bindings.EdSdkLibrary.EdsVoid, com.sun.jna.NativeLong, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateMemoryStreamFromPointer(EdSdkLibrary.EdsVoid inUserBuffer, NativeLong inBufferSize, Pointer outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateMemoryStreamFromPointer<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates a stream from the memory buffer you prepare. <br>
	 * //      Unlike the buffer size of streams created by means of EdsCreateMemoryStream, <br>
	 * //      the buffer size you prepare for streams created this way does not expand.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inUserBuffer - Pointer to the buffer you have prepared.<br>
	 * //                    Streams created by means of this API lead to this buffer. <br>
	 * //              inBufferSize - The number of bytes of the memory to allocate.<br>
	 * //      Out:    outStream - The reference of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateMemoryStreamFromPointer(EdsVoid*, EdsUInt32, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:766</i>
	 */
	NativeLong EdsCreateMemoryStreamFromPointer(EdSdkLibrary.EdsVoid inUserBuffer, NativeLong inBufferSize, PointerByReference outStream);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPointer                   <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the pointer to the start address of memory managed by the memory stream. <br>
	 * //      As the EDSDK automatically resizes the buffer, the memory stream provides <br>
	 * //          you with the same access methods as for the file stream. <br>
	 * //      If access is attempted that is excessive with regard to the buffer size<br>
	 * //          for the stream, data before the required buffer size is allocated <br>
	 * //          is copied internally, and new writing occurs. <br>
	 * //      Thus, the buffer pointer might be switched on an unknown timing. <br>
	 * //      Caution in use is therefore advised. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStream - Designate the memory stream for the pointer to retrieve. <br>
	 * //      Out:    outPointer - If successful, returns the pointer to the buffer <br>
	 * //                  written in the memory stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPointer(EdsStreamRef, EdsVoid**)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:793</i><br>
	 * @deprecated use the safer methods {@link #EdsGetPointer(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.ptr.PointerByReference)} and {@link #EdsGetPointer(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetPointer(Pointer inStream, PointerByReference outPointer);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPointer                   <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the pointer to the start address of memory managed by the memory stream. <br>
	 * //      As the EDSDK automatically resizes the buffer, the memory stream provides <br>
	 * //          you with the same access methods as for the file stream. <br>
	 * //      If access is attempted that is excessive with regard to the buffer size<br>
	 * //          for the stream, data before the required buffer size is allocated <br>
	 * //          is copied internally, and new writing occurs. <br>
	 * //      Thus, the buffer pointer might be switched on an unknown timing. <br>
	 * //      Caution in use is therefore advised. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStream - Designate the memory stream for the pointer to retrieve. <br>
	 * //      Out:    outPointer - If successful, returns the pointer to the buffer <br>
	 * //                  written in the memory stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPointer(EdsStreamRef, EdsVoid**)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:793</i>
	 */
	NativeLong EdsGetPointer(EdSdkLibrary.EdsStreamRef inStream, PointerByReference outPointer);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRead<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Reads data the size of inReadSize into the outBuffer buffer, <br>
	 * //          starting at the current read or write position of the stream. <br>
	 * //      The size of data actually read can be designated in outReadSize.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //              inReadSize -  The number of bytes to read.<br>
	 * //      Out:    outBuffer - Pointer to the user-supplied buffer that is to receive<br>
	 * //                          the data read from the stream. <br>
	 * //              outReadSize - The actually read number of bytes.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsRead(EdsStreamRef, EdsUInt32, EdsVoid*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:816</i><br>
	 * @deprecated use the safer methods {@link #EdsRead(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsRead(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsRead(Pointer inStreamRef, NativeLong inReadSize, EdSdkLibrary.EdsVoid outBuffer, NativeLongByReference outReadSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsRead<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Reads data the size of inReadSize into the outBuffer buffer, <br>
	 * //          starting at the current read or write position of the stream. <br>
	 * //      The size of data actually read can be designated in outReadSize.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //              inReadSize -  The number of bytes to read.<br>
	 * //      Out:    outBuffer - Pointer to the user-supplied buffer that is to receive<br>
	 * //                          the data read from the stream. <br>
	 * //              outReadSize - The actually read number of bytes.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsRead(EdsStreamRef, EdsUInt32, EdsVoid*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:816</i>
	 */
	NativeLong EdsRead(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLong inReadSize, EdSdkLibrary.EdsVoid outBuffer, NativeLongByReference outReadSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsWrite<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Writes data of a designated buffer <br>
	 * //          to the current read or write position of the stream. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef  - The reference of the stream or image.<br>
	 * //              inWriteSize - The number of bytes to write.<br>
	 * //              inBuffer - A pointer to the user-supplied buffer that contains <br>
	 * //                         the data to be written to the stream.<br>
	 * //      Out:    outWrittenSize - The actually written-in number of bytes.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsWrite(EdsStreamRef, EdsUInt32, const EdsVoid*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:840</i><br>
	 * @deprecated use the safer methods {@link #EdsWrite(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsWrite(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsVoid, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsWrite(Pointer inStreamRef, NativeLong inWriteSize, EdSdkLibrary.EdsVoid inBuffer, NativeLongByReference outWrittenSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsWrite<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Writes data of a designated buffer <br>
	 * //          to the current read or write position of the stream. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef  - The reference of the stream or image.<br>
	 * //              inWriteSize - The number of bytes to write.<br>
	 * //              inBuffer - A pointer to the user-supplied buffer that contains <br>
	 * //                         the data to be written to the stream.<br>
	 * //      Out:    outWrittenSize - The actually written-in number of bytes.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsWrite(EdsStreamRef, EdsUInt32, const EdsVoid*, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:840</i>
	 */
	NativeLong EdsWrite(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLong inWriteSize, EdSdkLibrary.EdsVoid inBuffer, NativeLongByReference outWrittenSize);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSeek<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Moves the read or write position of the stream<br>
	 * (that is, the file position indicator).<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef  - The reference of the stream or image. <br>
	 * //              inSeekOffset - Number of bytes to move the pointer. <br>
	 * //              inSeekOrigin - Pointer movement mode. Must be one of the following <br>
	 * //                             values.<br>
	 * //                  kEdsSeek_Cur     Move the stream pointer inSeekOffset bytes <br>
	 * //                                   from the current position in the stream. <br>
	 * //                  kEdsSeek_Begin   Move the stream pointer inSeekOffset bytes<br>
	 * //                                   forward from the beginning of the stream. <br>
	 * //                  kEdsSeek_End     Move the stream pointer inSeekOffset bytes<br>
	 * //                                   from the end of the stream. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSeek(EdsStreamRef, EdsInt32, EdsSeekOrigin)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:869</i><br>
	 * @deprecated use the safer methods {@link #EdsSeek(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.NativeLong, int)} and {@link #EdsSeek(com.sun.jna.Pointer, com.sun.jna.NativeLong, int)} instead
	 */
	@Deprecated 
	NativeLong EdsSeek(Pointer inStreamRef, NativeLong inSeekOffset, int inSeekOrigin);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSeek<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Moves the read or write position of the stream<br>
	 * (that is, the file position indicator).<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef  - The reference of the stream or image. <br>
	 * //              inSeekOffset - Number of bytes to move the pointer. <br>
	 * //              inSeekOrigin - Pointer movement mode. Must be one of the following <br>
	 * //                             values.<br>
	 * //                  kEdsSeek_Cur     Move the stream pointer inSeekOffset bytes <br>
	 * //                                   from the current position in the stream. <br>
	 * //                  kEdsSeek_Begin   Move the stream pointer inSeekOffset bytes<br>
	 * //                                   forward from the beginning of the stream. <br>
	 * //                  kEdsSeek_End     Move the stream pointer inSeekOffset bytes<br>
	 * //                                   from the end of the stream. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSeek(EdsStreamRef, EdsInt32, EdsSeekOrigin)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:869</i>
	 */
	NativeLong EdsSeek(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLong inSeekOffset, int inSeekOrigin);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPosition<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Gets the current read or write position of the stream<br>
	 * //          (that is, the file position indicator).<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //      Out:    outPosition - The current stream pointer.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPosition(EdsStreamRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:889</i><br>
	 * @deprecated use the safer methods {@link #EdsGetPosition(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsGetPosition(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetPosition(Pointer inStreamRef, NativeLongByReference outPosition);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetPosition<br>
	 * //<br>
	 * //  Description:<br>
	 * //       Gets the current read or write position of the stream<br>
	 * //          (that is, the file position indicator).<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //      Out:    outPosition - The current stream pointer.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetPosition(EdsStreamRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:889</i>
	 */
	NativeLong EdsGetPosition(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLongByReference outPosition);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetLength<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the stream size.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //      Out:    outLength - The length of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetLength(EdsStreamRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:907</i><br>
	 * @deprecated use the safer methods {@link #EdsGetLength(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.ptr.NativeLongByReference)} and {@link #EdsGetLength(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsGetLength(Pointer inStreamRef, NativeLongByReference outLength);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetLength<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets the stream size.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //      Out:    outLength - The length of the stream.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetLength(EdsStreamRef, EdsUInt32*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:907</i>
	 */
	NativeLong EdsGetLength(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLongByReference outLength);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCopyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Copies data from the copy source stream to the copy destination stream. <br>
	 * //      The read or write position of the data to copy is determined from <br>
	 * //          the current file read or write position of the respective stream. <br>
	 * //      After this API is executed, the read or write positions of the copy source <br>
	 * //          and copy destination streams are moved an amount corresponding to <br>
	 * //          inWriteSize in the positive direction. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //              inWriteSize - The number of bytes to copy.<br>
	 * //      Out:    outStreamRef - The reference of the stream or image.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCopyData(EdsStreamRef, EdsUInt32, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:931</i><br>
	 * @deprecated use the safer methods {@link #EdsCopyData(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsStreamRef)} and {@link #EdsCopyData(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsCopyData(Pointer inStreamRef, NativeLong inWriteSize, Pointer outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCopyData<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Copies data from the copy source stream to the copy destination stream. <br>
	 * //      The read or write position of the data to copy is determined from <br>
	 * //          the current file read or write position of the respective stream. <br>
	 * //      After this API is executed, the read or write positions of the copy source <br>
	 * //          and copy destination streams are moved an amount corresponding to <br>
	 * //          inWriteSize in the positive direction. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream or image.<br>
	 * //              inWriteSize - The number of bytes to copy.<br>
	 * //      Out:    outStreamRef - The reference of the stream or image.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCopyData(EdsStreamRef, EdsUInt32, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:931</i>
	 */
	NativeLong EdsCopyData(EdSdkLibrary.EdsStreamRef inStreamRef, NativeLong inWriteSize, EdSdkLibrary.EdsStreamRef outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetProgressCallback<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Register a progress callback function. <br>
	 * //      An event is received as notification of progress during processing that <br>
	 * //          takes a relatively long time, such as downloading files from a<br>
	 * //          remote camera. <br>
	 * //      If you register the callback function, the EDSDK calls the callback<br>
	 * //          function during execution or on completion of the following APIs. <br>
	 * //      This timing can be used in updating on-screen progress bars, for example.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the stream or image.<br>
	 * //              inProgressCallback - Pointer to a progress callback function.<br>
	 * //              inProgressOption - The option about progress is specified.<br>
	 * //                              Must be one of the following values.<br>
	 * //                         kEdsProgressOption_Done <br>
	 * //                             When processing is completed,a callback function<br>
	 * //                             is called only at once.<br>
	 * //                         kEdsProgressOption_Periodically<br>
	 * //                             A callback function is performed periodically.<br>
	 * //              inContext - Application information, passed in the argument <br>
	 * //                      when the callback function is called. Any information <br>
	 * //                      required for your program may be added. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetProgressCallback(EdsBaseRef, EdsProgressCallback, EdsProgressOption, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:967</i><br>
	 * @deprecated use the safer methods {@link #EdsSetProgressCallback(edsdk.bindings.EdSdkLibrary.EdsBaseRef, edsdk.bindings.EdSdkLibrary.EdsProgressCallback, int, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsSetProgressCallback(com.sun.jna.Pointer, edsdk.bindings.EdSdkLibrary.EdsProgressCallback, int, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsSetProgressCallback(Pointer inRef, EdSdkLibrary.EdsProgressCallback inProgressCallback, int inProgressOption, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetProgressCallback<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Register a progress callback function. <br>
	 * //      An event is received as notification of progress during processing that <br>
	 * //          takes a relatively long time, such as downloading files from a<br>
	 * //          remote camera. <br>
	 * //      If you register the callback function, the EDSDK calls the callback<br>
	 * //          function during execution or on completion of the following APIs. <br>
	 * //      This timing can be used in updating on-screen progress bars, for example.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inRef - The reference of the stream or image.<br>
	 * //              inProgressCallback - Pointer to a progress callback function.<br>
	 * //              inProgressOption - The option about progress is specified.<br>
	 * //                              Must be one of the following values.<br>
	 * //                         kEdsProgressOption_Done <br>
	 * //                             When processing is completed,a callback function<br>
	 * //                             is called only at once.<br>
	 * //                         kEdsProgressOption_Periodically<br>
	 * //                             A callback function is performed periodically.<br>
	 * //              inContext - Application information, passed in the argument <br>
	 * //                      when the callback function is called. Any information <br>
	 * //                      required for your program may be added. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetProgressCallback(EdsBaseRef, EdsProgressCallback, EdsProgressOption, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:967</i>
	 */
	NativeLong EdsSetProgressCallback(EdSdkLibrary.EdsBaseRef inRef, EdSdkLibrary.EdsProgressCallback inProgressCallback, int inProgressOption, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateImageRef<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates an image object from an image file. <br>
	 * //      Without modification, stream objects cannot be worked with as images. <br>
	 * //      Thus, when extracting images from image files, <br>
	 * //          you must use this API to create image objects. <br>
	 * //      The image object created this way can be used to get image information <br>
	 * //          (such as the height and width, number of color components, and<br>
	 * //           resolution), thumbnail image data, and the image data itself.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream.<br>
	 * //<br>
	 * //       Out:    outImageRef - The reference of the image.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateImageRef(EdsStreamRef, EdsImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1003</i><br>
	 * @deprecated use the safer methods {@link #EdsCreateImageRef(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.ptr.PointerByReference)} and {@link #EdsCreateImageRef(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateImageRef(Pointer inStreamRef, Pointer outImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateImageRef<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates an image object from an image file. <br>
	 * //      Without modification, stream objects cannot be worked with as images. <br>
	 * //      Thus, when extracting images from image files, <br>
	 * //          you must use this API to create image objects. <br>
	 * //      The image object created this way can be used to get image information <br>
	 * //          (such as the height and width, number of color components, and<br>
	 * //           resolution), thumbnail image data, and the image data itself.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream.<br>
	 * //<br>
	 * //       Out:    outImageRef - The reference of the image.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateImageRef(EdsStreamRef, EdsImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1003</i>
	 */
	NativeLong EdsCreateImageRef(EdSdkLibrary.EdsStreamRef inStreamRef, PointerByReference outImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateImageRef<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Creates an image object from an image file. <br>
	 * //      Without modification, stream objects cannot be worked with as images. <br>
	 * //      Thus, when extracting images from image files, <br>
	 * //          you must use this API to create image objects. <br>
	 * //      The image object created this way can be used to get image information <br>
	 * //          (such as the height and width, number of color components, and<br>
	 * //           resolution), thumbnail image data, and the image data itself.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - The reference of the stream.<br>
	 * //<br>
	 * //       Out:    outImageRef - The reference of the image.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateImageRef(EdsStreamRef, EdsImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1003</i>
	 */
	NativeLong EdsCreateImageRef(Pointer inStreamRef, PointerByReference outImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetImageInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets image information from a designated image object. <br>
	 * //      Here, image information means the image width and height, <br>
	 * //          number of color components, resolution, and effective image area.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - Designate the object for which to get image information. <br>
	 * //              inImageSource - Of the various image data items in the image file,<br>
	 * //                  designate the type of image data representing the <br>
	 * //                  information you want to get. Designate the image as<br>
	 * //                  defined in Enum EdsImageSource. <br>
	 * //<br>
	 * //                      kEdsImageSrc_FullView<br>
	 * //                                  The image itself (a full-sized image) <br>
	 * //                      kEdsImageSrc_Thumbnail<br>
	 * //                                  A thumbnail image <br>
	 * //                      kEdsImageSrc_Preview<br>
	 * //                                  A preview image<br>
	 * //                      kEdsImageSrc_RAWThumbnail<br>
	 * //                                  A RAW thumbnail image <br>
	 * //                      kEdsImageSrc_RAWFullView<br>
	 * //                                  A RAW full-sized image <br>
	 * //       Out:    outImageInfo - Stores the image data information designated <br>
	 * //                      in inImageSource. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetImageInfo(EdsImageRef, EdsImageSource, EdsImageInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1038</i><br>
	 * @deprecated use the safer methods {@link #EdsGetImageInfo(edsdk.bindings.EdSdkLibrary.EdsImageRef, int, edsdk.bindings.tagEdsImageInfo)} and {@link #EdsGetImageInfo(com.sun.jna.Pointer, int, edsdk.bindings.tagEdsImageInfo)} instead
	 */
	@Deprecated 
	NativeLong EdsGetImageInfo(Pointer inImageRef, int inImageSource, tagEdsImageInfo outImageInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetImageInfo<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets image information from a designated image object. <br>
	 * //      Here, image information means the image width and height, <br>
	 * //          number of color components, resolution, and effective image area.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inStreamRef - Designate the object for which to get image information. <br>
	 * //              inImageSource - Of the various image data items in the image file,<br>
	 * //                  designate the type of image data representing the <br>
	 * //                  information you want to get. Designate the image as<br>
	 * //                  defined in Enum EdsImageSource. <br>
	 * //<br>
	 * //                      kEdsImageSrc_FullView<br>
	 * //                                  The image itself (a full-sized image) <br>
	 * //                      kEdsImageSrc_Thumbnail<br>
	 * //                                  A thumbnail image <br>
	 * //                      kEdsImageSrc_Preview<br>
	 * //                                  A preview image<br>
	 * //                      kEdsImageSrc_RAWThumbnail<br>
	 * //                                  A RAW thumbnail image <br>
	 * //                      kEdsImageSrc_RAWFullView<br>
	 * //                                  A RAW full-sized image <br>
	 * //       Out:    outImageInfo - Stores the image data information designated <br>
	 * //                      in inImageSource. <br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetImageInfo(EdsImageRef, EdsImageSource, EdsImageInfo*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1038</i>
	 */
	NativeLong EdsGetImageInfo(EdSdkLibrary.EdsImageRef inImageRef, int inImageSource, tagEdsImageInfo outImageInfo);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetImage                         <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets designated image data from an image file, in the form of a<br>
	 * //          designated rectangle. <br>
	 * //      Returns uncompressed results for JPEGs and processed results <br>
	 * //          in the designated pixel order (RGB, Top-down BGR, and so on) for<br>
	 * //           RAW images. <br>
	 * //      Additionally, by designating the input/output rectangle, <br>
	 * //          it is possible to get reduced, enlarged, or partial images. <br>
	 * //      However, because images corresponding to the designated output rectangle <br>
	 * //          are always returned by the SDK, the SDK does not take the aspect <br>
	 * //          ratio into account. <br>
	 * //      To maintain the aspect ratio, you must keep the aspect ratio in mind <br>
	 * //          when designating the rectangle. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     <br>
	 * //              inImageRef - Designate the image object for which to get <br>
	 * //                      the image data.<br>
	 * //              inImageSource - Designate the type of image data to get from<br>
	 * //                      the image file (thumbnail, preview, and so on). <br>
	 * //                      Designate values as defined in Enum EdsImageSource. <br>
	 * //              inImageType - Designate the output image type. Because<br>
	 * //                      the output format of EdGetImage may only be RGB, only<br>
	 * //                      kEdsTargetImageType_RGB or kEdsTargetImageType_RGB16<br>
	 * //                      can be designated. <br>
	 * //                      However, image types exceeding the resolution of <br>
	 * //                      inImageSource cannot be designated. <br>
	 * //              inSrcRect - Designate the coordinates and size of the rectangle<br>
	 * //                      to be retrieved (processed) from the source image. <br>
	 * //              inDstSize - Designate the rectangle size for output. <br>
	 * //<br>
	 * //      Out:    <br>
	 * //              outStreamRef - Designate the memory or file stream for output of<br>
	 * //                      the image.<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetImage(EdsImageRef, EdsImageSource, EdsTargetImageType, EdsRect, EdsSize, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1083</i><br>
	 * @deprecated use the safer methods {@link #EdsGetImage(edsdk.bindings.EdSdkLibrary.EdsImageRef, int, int, edsdk.bindings.tagEdsRect.ByValue, edsdk.bindings.tagEdsSize.ByValue, edsdk.bindings.EdSdkLibrary.EdsStreamRef)} and {@link #EdsGetImage(com.sun.jna.Pointer, int, int, edsdk.bindings.tagEdsRect.ByValue, edsdk.bindings.tagEdsSize.ByValue, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsGetImage(Pointer inImageRef, int inImageSource, int inImageType, edsdk.bindings.tagEdsRect.ByValue inSrcRect, edsdk.bindings.tagEdsSize.ByValue inDstSize, Pointer outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetImage                         <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Gets designated image data from an image file, in the form of a<br>
	 * //          designated rectangle. <br>
	 * //      Returns uncompressed results for JPEGs and processed results <br>
	 * //          in the designated pixel order (RGB, Top-down BGR, and so on) for<br>
	 * //           RAW images. <br>
	 * //      Additionally, by designating the input/output rectangle, <br>
	 * //          it is possible to get reduced, enlarged, or partial images. <br>
	 * //      However, because images corresponding to the designated output rectangle <br>
	 * //          are always returned by the SDK, the SDK does not take the aspect <br>
	 * //          ratio into account. <br>
	 * //      To maintain the aspect ratio, you must keep the aspect ratio in mind <br>
	 * //          when designating the rectangle. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     <br>
	 * //              inImageRef - Designate the image object for which to get <br>
	 * //                      the image data.<br>
	 * //              inImageSource - Designate the type of image data to get from<br>
	 * //                      the image file (thumbnail, preview, and so on). <br>
	 * //                      Designate values as defined in Enum EdsImageSource. <br>
	 * //              inImageType - Designate the output image type. Because<br>
	 * //                      the output format of EdGetImage may only be RGB, only<br>
	 * //                      kEdsTargetImageType_RGB or kEdsTargetImageType_RGB16<br>
	 * //                      can be designated. <br>
	 * //                      However, image types exceeding the resolution of <br>
	 * //                      inImageSource cannot be designated. <br>
	 * //              inSrcRect - Designate the coordinates and size of the rectangle<br>
	 * //                      to be retrieved (processed) from the source image. <br>
	 * //              inDstSize - Designate the rectangle size for output. <br>
	 * //<br>
	 * //      Out:    <br>
	 * //              outStreamRef - Designate the memory or file stream for output of<br>
	 * //                      the image.<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetImage(EdsImageRef, EdsImageSource, EdsTargetImageType, EdsRect, EdsSize, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1083</i>
	 */
	NativeLong EdsGetImage(EdSdkLibrary.EdsImageRef inImageRef, int inImageSource, int inImageType, edsdk.bindings.tagEdsRect.ByValue inSrcRect, edsdk.bindings.tagEdsSize.ByValue inDstSize, EdSdkLibrary.EdsStreamRef outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSaveImage            <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Saves as a designated image type after RAW processing. <br>
	 * //      When saving with JPEG compression, <br>
	 * //          the JPEG quality setting applies with respect to EdsOptionRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:    <br>
	 * //          inImageRef - Designate the image object for which to produce the file. <br>
	 * //          inImageType - Designate the image type to produce. Designate the <br>
	 * //                  following image types.<br>
	 * //<br>
	 * //                  kEdsTargetImageType - Jpeg  JPEG<br>
	 * //                  kEdsTargetImageType - TIFF  8-bit TIFF<br>
	 * //                  kEdsTargetImageType - TIFF16    16-bit TIFF<br>
	 * //          inSaveSetting - Designate saving options, such as JPEG image quality.<br>
	 * //      Out:    <br>
	 * //          outStreamRef - Specifies the output file stream. The memory stream <br>
	 * //                  cannot be specified here.<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSaveImage(EdsImageRef, EdsTargetImageType, EdsSaveImageSetting, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1116</i><br>
	 * @deprecated use the safer methods {@link #EdsSaveImage(edsdk.bindings.EdSdkLibrary.EdsImageRef, int, edsdk.bindings.tagEdsSaveImageSetting.ByValue, edsdk.bindings.EdSdkLibrary.EdsStreamRef)} and {@link #EdsSaveImage(com.sun.jna.Pointer, int, edsdk.bindings.tagEdsSaveImageSetting.ByValue, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsSaveImage(Pointer inImageRef, int inImageType, edsdk.bindings.tagEdsSaveImageSetting.ByValue inSaveSetting, Pointer outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSaveImage            <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Saves as a designated image type after RAW processing. <br>
	 * //      When saving with JPEG compression, <br>
	 * //          the JPEG quality setting applies with respect to EdsOptionRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:    <br>
	 * //          inImageRef - Designate the image object for which to produce the file. <br>
	 * //          inImageType - Designate the image type to produce. Designate the <br>
	 * //                  following image types.<br>
	 * //<br>
	 * //                  kEdsTargetImageType - Jpeg  JPEG<br>
	 * //                  kEdsTargetImageType - TIFF  8-bit TIFF<br>
	 * //                  kEdsTargetImageType - TIFF16    16-bit TIFF<br>
	 * //          inSaveSetting - Designate saving options, such as JPEG image quality.<br>
	 * //      Out:    <br>
	 * //          outStreamRef - Specifies the output file stream. The memory stream <br>
	 * //                  cannot be specified here.<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSaveImage(EdsImageRef, EdsTargetImageType, EdsSaveImageSetting, EdsStreamRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1116</i>
	 */
	NativeLong EdsSaveImage(EdSdkLibrary.EdsImageRef inImageRef, int inImageType, edsdk.bindings.tagEdsSaveImageSetting.ByValue inSaveSetting, EdSdkLibrary.EdsStreamRef outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCacheImage                       <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Switches a setting on and off for creation of an image cache in the SDK <br>
	 * //          for a designated image object during extraction (processing) of<br>
	 * //          the image data. <br>
	 * //          Creating the cache increases the processing speed, starting from<br>
	 * //          the second time.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inImageRef - The reference of the image.<br>
	 * //              inUseCache - If cache image data or not<br>
	 * //                          If set to FALSE, the cached image data will released.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCacheImage(EdsImageRef, EdsBool)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1142</i><br>
	 * @deprecated use the safer methods {@link #EdsCacheImage(edsdk.bindings.EdSdkLibrary.EdsImageRef, int)} and {@link #EdsCacheImage(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	NativeLong EdsCacheImage(Pointer inImageRef, int inUseCache);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCacheImage                       <br>
	 * //<br>
	 * //  Description:<br>
	 * //      Switches a setting on and off for creation of an image cache in the SDK <br>
	 * //          for a designated image object during extraction (processing) of<br>
	 * //          the image data. <br>
	 * //          Creating the cache increases the processing speed, starting from<br>
	 * //          the second time.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inImageRef - The reference of the image.<br>
	 * //              inUseCache - If cache image data or not<br>
	 * //                          If set to FALSE, the cached image data will released.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCacheImage(EdsImageRef, EdsBool)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1142</i>
	 */
	NativeLong EdsCacheImage(EdSdkLibrary.EdsImageRef inImageRef, int inUseCache);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsReflectImageProperty         <br>
	 * //  Description:<br>
	 * //      Incorporates image object property changes <br>
	 * //          (effected by means of EdsSetPropertyData) in the stream. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inImageRef - The reference of the image.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsReflectImageProperty(EdsImageRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1159</i><br>
	 * @deprecated use the safer methods {@link #EdsReflectImageProperty(edsdk.bindings.EdSdkLibrary.EdsImageRef)} and {@link #EdsReflectImageProperty(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsReflectImageProperty(Pointer inImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsReflectImageProperty         <br>
	 * //  Description:<br>
	 * //      Incorporates image object property changes <br>
	 * //          (effected by means of EdsSetPropertyData) in the stream. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inImageRef - The reference of the image.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsReflectImageProperty(EdsImageRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1159</i>
	 */
	NativeLong EdsReflectImageProperty(EdSdkLibrary.EdsImageRef inImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateEvfImageRef         <br>
	 * //  Description:<br>
	 * //       Creates an object used to get the live view image data set. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inStreamRef - The stream reference which opened to get EVF JPEG image.<br>
	 * //      Out:    outEvfImageRef - The EVFData reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateEvfImageRef(EdsStreamRef, EdsEvfImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1175</i><br>
	 * @deprecated use the safer methods {@link #EdsCreateEvfImageRef(edsdk.bindings.EdSdkLibrary.EdsStreamRef, com.sun.jna.ptr.PointerByReference)} and {@link #EdsCreateEvfImageRef(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateEvfImageRef(Pointer inStreamRef, Pointer outEvfImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateEvfImageRef         <br>
	 * //  Description:<br>
	 * //       Creates an object used to get the live view image data set. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inStreamRef - The stream reference which opened to get EVF JPEG image.<br>
	 * //      Out:    outEvfImageRef - The EVFData reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateEvfImageRef(EdsStreamRef, EdsEvfImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1175</i>
	 */
	NativeLong EdsCreateEvfImageRef(EdSdkLibrary.EdsStreamRef inStreamRef, PointerByReference outEvfImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsCreateEvfImageRef         <br>
	 * //  Description:<br>
	 * //       Creates an object used to get the live view image data set. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inStreamRef - The stream reference which opened to get EVF JPEG image.<br>
	 * //      Out:    outEvfImageRef - The EVFData reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateEvfImageRef(EdsStreamRef, EdsEvfImageRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1175</i>
	 */
	NativeLong EdsCreateEvfImageRef(Pointer inStreamRef, PointerByReference outEvfImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadEvfImage         <br>
	 * //  Description:<br>
	 * //		Downloads the live view image data set for a camera currently in live view mode.<br>
	 * //		Live view can be started by using the property ID:kEdsPropertyID_Evf_OutputDevice and<br>
	 * //		data:EdsOutputDevice_PC to call EdsSetPropertyData.<br>
	 * //		In addition to image data, information such as zoom, focus position, and histogram data<br>
	 * //		is included in the image data set. Image data is saved in a stream maintained by EdsEvfImageRef.<br>
	 * //		EdsGetPropertyData can be used to get information such as the zoom, focus position, etc.<br>
	 * //		Although the information of the zoom and focus position can be obtained from EdsEvfImageRef,<br>
	 * //		settings are applied to EdsCameraRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inCameraRef - The Camera reference.<br>
	 * //      In:     inEvfImageRef - The EVFData reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadEvfImage(EdsCameraRef, EdsEvfImageRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1200</i><br>
	 * @deprecated use the safer methods {@link #EdsDownloadEvfImage(edsdk.bindings.EdSdkLibrary.EdsCameraRef, edsdk.bindings.EdSdkLibrary.EdsEvfImageRef)} and {@link #EdsDownloadEvfImage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	NativeLong EdsDownloadEvfImage(Pointer inCameraRef, Pointer inEvfImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsDownloadEvfImage         <br>
	 * //  Description:<br>
	 * //		Downloads the live view image data set for a camera currently in live view mode.<br>
	 * //		Live view can be started by using the property ID:kEdsPropertyID_Evf_OutputDevice and<br>
	 * //		data:EdsOutputDevice_PC to call EdsSetPropertyData.<br>
	 * //		In addition to image data, information such as zoom, focus position, and histogram data<br>
	 * //		is included in the image data set. Image data is saved in a stream maintained by EdsEvfImageRef.<br>
	 * //		EdsGetPropertyData can be used to get information such as the zoom, focus position, etc.<br>
	 * //		Although the information of the zoom and focus position can be obtained from EdsEvfImageRef,<br>
	 * //		settings are applied to EdsCameraRef.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //      In:     inCameraRef - The Camera reference.<br>
	 * //      In:     inEvfImageRef - The EVFData reference.<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsDownloadEvfImage(EdsCameraRef, EdsEvfImageRef)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1200</i>
	 */
	NativeLong EdsDownloadEvfImage(EdSdkLibrary.EdsCameraRef inCameraRef, EdSdkLibrary.EdsEvfImageRef inEvfImageRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetCameraAddedHandler<br>
	 * //<br>
	 * //  Description:<br>
	 * //      Registers a callback function for when a camera is detected.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraAddedHandler - Pointer to a callback function<br>
	 * //                          called when a camera is connected physically<br>
	 * //              inContext - Specifies an application-defined value to be sent to<br>
	 * //                          the callback function pointed to by CallBack parameter.<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetCameraAddedHandler(EdsCameraAddedHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1230</i>
	 */
	NativeLong EdsSetCameraAddedHandler(EdSdkLibrary.EdsCameraAddedHandler inCameraAddedHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetPropertyEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //       Registers a callback function for receiving status <br>
	 * //          change notification events for property states on a camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //              inPropertyEventHandler - Designate the pointer to the callback<br>
	 * //                      function for receiving property-related camera events.<br>
	 * //              inContext - Designate application information to be passed by <br>
	 * //                      means of the callback function. Any data needed for<br>
	 * //                      your application can be passed. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetPropertyEventHandler(EdsCameraRef, EdsPropertyEvent, EdsPropertyEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1255</i><br>
	 * @deprecated use the safer methods {@link #EdsSetPropertyEventHandler(edsdk.bindings.EdSdkLibrary.EdsCameraRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsPropertyEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsSetPropertyEventHandler(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsPropertyEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsSetPropertyEventHandler(Pointer inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsPropertyEventHandler inPropertyEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetPropertyEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //       Registers a callback function for receiving status <br>
	 * //          change notification events for property states on a camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //              inPropertyEventHandler - Designate the pointer to the callback<br>
	 * //                      function for receiving property-related camera events.<br>
	 * //              inContext - Designate application information to be passed by <br>
	 * //                      means of the callback function. Any data needed for<br>
	 * //                      your application can be passed. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetPropertyEventHandler(EdsCameraRef, EdsPropertyEvent, EdsPropertyEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1255</i>
	 */
	NativeLong EdsSetPropertyEventHandler(EdSdkLibrary.EdsCameraRef inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsPropertyEventHandler inPropertyEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetObjectEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //       Registers a callback function for receiving status <br>
	 * //          change notification events for objects on a remote camera. <br>
	 * //      Here, object means volumes representing memory cards, files and directories, <br>
	 * //          and shot images stored in memory, in particular. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //                  To designate all events, use kEdsObjectEvent_All. <br>
	 * //              inObjectEventHandler - Designate the pointer to the callback function<br>
	 * //                  for receiving object-related camera events.<br>
	 * //              inContext - Passes inContext without modification,<br>
	 * //                  as designated as an EdsSetObjectEventHandler argument. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetObjectEventHandler(EdsCameraRef, EdsObjectEvent, EdsObjectEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1284</i><br>
	 * @deprecated use the safer methods {@link #EdsSetObjectEventHandler(edsdk.bindings.EdSdkLibrary.EdsCameraRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsObjectEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsSetObjectEventHandler(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsObjectEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsSetObjectEventHandler(Pointer inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsObjectEventHandler inObjectEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsSetObjectEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //       Registers a callback function for receiving status <br>
	 * //          change notification events for objects on a remote camera. <br>
	 * //      Here, object means volumes representing memory cards, files and directories, <br>
	 * //          and shot images stored in memory, in particular. <br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //                  To designate all events, use kEdsObjectEvent_All. <br>
	 * //              inObjectEventHandler - Designate the pointer to the callback function<br>
	 * //                  for receiving object-related camera events.<br>
	 * //              inContext - Passes inContext without modification,<br>
	 * //                  as designated as an EdsSetObjectEventHandler argument. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetObjectEventHandler(EdsCameraRef, EdsObjectEvent, EdsObjectEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1284</i>
	 */
	NativeLong EdsSetObjectEventHandler(EdSdkLibrary.EdsCameraRef inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsObjectEventHandler inObjectEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:  EdsSetCameraStateEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //      Registers a callback function for receiving status <br>
	 * //          change notification events for property states on a camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //                  To designate all events, use kEdsStateEvent_All. <br>
	 * //              inStateEventHandler - Designate the pointer to the callback function<br>
	 * //                  for receiving events related to camera object states.<br>
	 * //              inContext - Designate application information to be passed<br>
	 * //                  by means of the callback function. Any data needed for<br>
	 * //                  your application can be passed. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetCameraStateEventHandler(EdsCameraRef, EdsStateEvent, EdsStateEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1312</i><br>
	 * @deprecated use the safer methods {@link #EdsSetCameraStateEventHandler(edsdk.bindings.EdSdkLibrary.EdsCameraRef, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsStateEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} and {@link #EdsSetCameraStateEventHandler(com.sun.jna.Pointer, com.sun.jna.NativeLong, edsdk.bindings.EdSdkLibrary.EdsStateEventHandler, edsdk.bindings.EdSdkLibrary.EdsVoid)} instead
	 */
	@Deprecated 
	NativeLong EdsSetCameraStateEventHandler(Pointer inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsStateEventHandler inStateEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:  EdsSetCameraStateEventHandler<br>
	 * //              <br>
	 * //  Description:<br>
	 * //      Registers a callback function for receiving status <br>
	 * //          change notification events for property states on a camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    inCameraRef - Designate the camera object. <br>
	 * //              inEvent - Designate one or all events to be supplemented.<br>
	 * //                  To designate all events, use kEdsStateEvent_All. <br>
	 * //              inStateEventHandler - Designate the pointer to the callback function<br>
	 * //                  for receiving events related to camera object states.<br>
	 * //              inContext - Designate application information to be passed<br>
	 * //                  by means of the callback function. Any data needed for<br>
	 * //                  your application can be passed. <br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsSetCameraStateEventHandler(EdsCameraRef, EdsStateEvent, EdsStateEventHandler, EdsVoid*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1312</i>
	 */
	NativeLong EdsSetCameraStateEventHandler(EdSdkLibrary.EdsCameraRef inCameraRef, NativeLong inEvnet, EdSdkLibrary.EdsStateEventHandler inStateEventHandler, EdSdkLibrary.EdsVoid inContext);
	/**
	 * ----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateStream(EdsIStream*, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1320</i><br>
	 * @deprecated use the safer method {@link #EdsCreateStream(edsdk.bindings.EdsIStream, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeLong EdsCreateStream(EdsIStream inStream, Pointer outStreamRef);
	/**
	 * ----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsCreateStream(EdsIStream*, EdsStreamRef*)</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1320</i>
	 */
	NativeLong EdsCreateStream(EdsIStream inStream, PointerByReference outStreamRef);
	/**
	 * -----------------------------------------------------------------------------<br>
	 * //<br>
	 * //  Function:   EdsGetEvent<br>
	 * //<br>
	 * //  Description:<br>
	 * //      This function acquires an event. <br>
	 * //      In console application, please call this function regularly to acquire<br>
	 * //      the event from a camera.<br>
	 * //<br>
	 * //  Parameters:<br>
	 * //       In:    None<br>
	 * //      Out:    None<br>
	 * //<br>
	 * //  Returns:    Any of the sdk errors.<br>
	 * -----------------------------------------------------------------------------<br>
	 * Original signature : <code>__attribute__((dllimport)) EdsError EdsGetEvent()</code><br>
	 * <i>native declaration : D:\ims_archive\C++\SDK\ED-SDK\Ver215\EDSDK\Header\EDSDK.h:1337</i>
	 */
	NativeLong EdsGetEvent();
	public static class EdsVoid extends PointerType {
		public EdsVoid(Pointer address) {
			super(address);
		}
		public EdsVoid() {
			super();
		}
	};
	public static class EdsImageRef extends PointerType {
		public EdsImageRef(Pointer address) {
			super(address);
		}
		public EdsImageRef() {
			super();
		}
	};
	public static class EdsBaseRef extends PointerType {
		public EdsBaseRef(Pointer address) {
			super(address);
		}
		public EdsBaseRef() {
			super();
		}
	};
	public static class EdsEvfImageRef extends PointerType {
		public EdsEvfImageRef(Pointer address) {
			super(address);
		}
		public EdsEvfImageRef() {
			super();
		}
	};
	public static class EdsDirectoryItemRef extends PointerType {
		public EdsDirectoryItemRef(Pointer address) {
			super(address);
		}
		public EdsDirectoryItemRef() {
			super();
		}
	};
	public static class EdsStreamRef extends PointerType {
		public EdsStreamRef(Pointer address) {
			super(address);
		}
		public EdsStreamRef() {
			super();
		}
	};
	public static class EdsVolumeRef extends PointerType {
		public EdsVolumeRef(Pointer address) {
			super(address);
		}
		public EdsVolumeRef() {
			super();
		}
	};
	public static class EdsCameraRef extends PointerType {
		public EdsCameraRef(Pointer address) {
			super(address);
		}
		public EdsCameraRef() {
			super();
		}
	};
	public static class EdsCameraListRef extends PointerType {
		public EdsCameraListRef(Pointer address) {
			super(address);
		}
		public EdsCameraListRef() {
			super();
		}
	};
}
